(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    102391,       2170]
NotebookOptionsPosition[    100554,       2105]
NotebookOutlinePosition[    100941,       2122]
CellTagsIndexPosition[    100898,       2119]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Init functions", "Section",
 CellChangeTimes->{{3.5684502811566553`*^9, 3.5684502872301683`*^9}, {
   3.568450750457419*^9, 3.568450751266872*^9}, 3.568453411023438*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "extract", " ", "connections", " ", "list", " ", "from", " ", 
    "SparseArray", " ", "adjacency", " ", "matrix"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"GetConnections", "[", "adjA_SparseArray", "]"}], ":=", 
     RowBox[{
      RowBox[{"Drop", "[", 
       RowBox[{
        RowBox[{"ArrayRules", "@", "adjA"}], ",", 
        RowBox[{"-", "1"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"InDegreesTable", "[", "A_", "]"}], ":=", 
     RowBox[{"Total", "@", "A"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"OutDegreesTable", "[", "A_", "]"}], ":=", 
     RowBox[{"Total", "@", 
      RowBox[{"Transpose", "@", "A"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"TotalDegreesTable", "[", "A_", "]"}], ":=", 
     RowBox[{
      RowBox[{"InDegreesTable", "@", "A"}], "+", 
      RowBox[{"OutDegreesTable", "@", "A"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"BidirDegreesTable", "[", "A_", "]"}], ":=", 
     RowBox[{"Diagonal", "@", 
      RowBox[{"MatrixPower", "[", 
       RowBox[{"A", ",", "2"}], "]"}]}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.594559358296245*^9, 3.594559358553472*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MeasureFullClusteringIndex", "[", "A_", "]"}], ":=", 
   RowBox[{"Mean", "@", 
    RowBox[{"N", "@", 
     RowBox[{"MeasureFullClusteringIndices", "[", "A", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MeasureFullClusteringIndices", "[", "A_List", "]"}], ":=", 
   RowBox[{"MeasureFullClusteringIndices", "[", 
    RowBox[{"SparseArray", "@", "A"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MeasureFullClusteringIndices", "[", "A_SparseArray", "]"}], ":=", 
   
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ii", ",", "x1", ",", "x2", ",", "x3", ",", "Atemp"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"MatchQ", "[", 
          RowBox[{
           RowBox[{"Dimensions", "@", "A"}], ",", 
           RowBox[{"{", 
            RowBox[{"x_", ",", "x_"}], "}"}]}], "]"}]}], ",", 
        RowBox[{
         RowBox[{
         "Print", "[", 
          "\"\<error in MeasureQuality: input matrix is not square!\>\"", 
          "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Union", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0.", ",", "1."}], "}"}], ",", 
              "#"}], "]"}], "&"}], "/@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"Normal", "@", "A"}]}]}], "]"}], "\[NotEqual]", 
         RowBox[{"{", "True", "}"}]}], ",", 
        RowBox[{
         RowBox[{
         "Print", "[", 
          "\"\<error in MeasureQuality: input matrix is not binary!\>\"", 
          "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Union", "@", 
          RowBox[{"N", "@", 
           RowBox[{"Diagonal", "@", 
            RowBox[{"Normal", "@", "A"}]}]}]}], "\[NotEqual]", 
         RowBox[{"{", "0.", "}"}]}], ",", 
        RowBox[{
         RowBox[{
         "Print", "[", 
          "\"\<error in MeasureQuality: input matrix has non-zero diagonal \
elements!\>\"", "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Atemp", "=", 
       RowBox[{"A", "+", 
        RowBox[{"Transpose", "[", "A", "]"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"x1", "=", 
       RowBox[{"Diagonal", "@", 
        RowBox[{"MatrixPower", "[", 
         RowBox[{"Atemp", ",", "3"}], "]"}]}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{"x1", ":", " ", 
        RowBox[{"number", " ", "of", " ", "triples"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"x2", "=", 
       RowBox[{"TotalDegreesTable", "@", "A"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"x3", "=", 
       RowBox[{"BidirDegreesTable", "@", "A"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"Return", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
               "x2", "\[LeftDoubleBracket]", "ii", "\[RightDoubleBracket]"}], 
               
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                 "x2", "\[LeftDoubleBracket]", "ii", 
                  "\[RightDoubleBracket]"}], "-", "1"}], ")"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{
               "x3", "\[LeftDoubleBracket]", "ii", 
                "\[RightDoubleBracket]"}]}]}], ")"}], ">", "0"}], ",", 
           RowBox[{"N", "@", 
            FractionBox[
             RowBox[{
             "x1", "\[LeftDoubleBracket]", "ii", "\[RightDoubleBracket]"}], 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{
                 "x2", "\[LeftDoubleBracket]", "ii", 
                  "\[RightDoubleBracket]"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "x2", "\[LeftDoubleBracket]", "ii", 
                    "\[RightDoubleBracket]"}], "-", "1"}], ")"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{
                 "x3", "\[LeftDoubleBracket]", "ii", 
                  "\[RightDoubleBracket]"}]}]}], ")"}]}]]}], ",", "0"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", 
           RowBox[{"Length", "@", "A"}]}], "}"}]}], "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.46089191052982*^9, 3.460891922429226*^9}, {
   3.4608923005984383`*^9, 3.46089247242982*^9}, {3.4608927841384897`*^9, 
   3.460892879391724*^9}, {3.4608929422300367`*^9, 3.460892970873293*^9}, {
   3.461931049300166*^9, 3.461931103494814*^9}, {3.4619311425613937`*^9, 
   3.461931207721446*^9}, {3.461931242297888*^9, 3.461931265687295*^9}, {
   3.461931337461513*^9, 3.4619313418521423`*^9}, {3.461931708003808*^9, 
   3.4619317177494087`*^9}, {3.4619318542544813`*^9, 3.461931939223929*^9}, {
   3.461932046227027*^9, 3.461932049589615*^9}, {3.461932541431065*^9, 
   3.461932544250658*^9}, {3.461934772092346*^9, 3.461934798584127*^9}, 
   3.4619349734825783`*^9, {3.4619350840204144`*^9, 3.461935090114636*^9}, {
   3.461935379519823*^9, 3.461935558631168*^9}, {3.461935602622184*^9, 
   3.4619356028253527`*^9}, {3.461936656734462*^9, 3.461936690391556*^9}, {
   3.461936723617144*^9, 3.461936877331249*^9}, {3.461936912219365*^9, 
   3.461936975310337*^9}, {3.461937011743279*^9, 3.461937087328511*^9}, {
   3.4619371392637672`*^9, 3.4619371548764467`*^9}, {3.461937287952435*^9, 
   3.4619372905582533`*^9}, {3.462098225041065*^9, 3.462098248301895*^9}, {
   3.462098411884549*^9, 3.462098422774818*^9}, {3.462099089609891*^9, 
   3.462099134514984*^9}, {3.46209934497183*^9, 3.4620993770862722`*^9}, {
   3.462099444777872*^9, 3.462099526719647*^9}, {3.462099562556653*^9, 
   3.462099574948056*^9}, {3.4620996268520727`*^9, 3.462099742476551*^9}, {
   3.462099778271891*^9, 3.462099816860179*^9}, {3.462106749524172*^9, 
   3.4621067662962933`*^9}, {3.4621068356117373`*^9, 3.462106839316641*^9}, {
   3.462106935662219*^9, 3.4621069360449877`*^9}, {3.4621071058051567`*^9, 
   3.462107183782477*^9}, {3.462107222294531*^9, 3.4621072284506903`*^9}, {
   3.462107264766177*^9, 3.462107285355937*^9}, {3.462107320042173*^9, 
   3.462107324841226*^9}, {3.462107383303043*^9, 3.462107390501712*^9}, {
   3.4621074298590183`*^9, 3.462107447392692*^9}, {3.462107502217407*^9, 
   3.462107531601645*^9}, {3.462107576247136*^9, 3.4621075806432962`*^9}, {
   3.46210761338155*^9, 3.462107627778309*^9}, {3.462107662035646*^9, 
   3.462107713476053*^9}, {3.462107967591661*^9, 3.462108112411642*^9}, {
   3.462108150130138*^9, 3.462108152401539*^9}, {3.462108195038095*^9, 
   3.462108256329485*^9}, {3.46210886075665*^9, 3.4621089427967463`*^9}, {
   3.462108984745453*^9, 3.4621089867272787`*^9}, {3.462109877450227*^9, 
   3.462109879851156*^9}, {3.4621928528494263`*^9, 3.462192868863735*^9}, {
   3.462192902086259*^9, 3.462192959066167*^9}, {3.4621930248905993`*^9, 
   3.462193025427294*^9}, {3.462193264826396*^9, 3.462193265130286*^9}, {
   3.462272456364428*^9, 3.4622724884244947`*^9}, {3.462272545075605*^9, 
   3.4622725454978867`*^9}, {3.462272609099372*^9, 3.4622727049620113`*^9}, {
   3.462272740689825*^9, 3.4622727867573833`*^9}, {3.462272883804636*^9, 
   3.462272896233952*^9}, {3.4622731198219633`*^9, 3.4622731729998703`*^9}, {
   3.462273402003118*^9, 3.462273464519643*^9}, {3.462274804676793*^9, 
   3.4622748466495028`*^9}, {3.462274880681966*^9, 3.46227495009752*^9}, {
   3.4622749801133213`*^9, 3.462275059429543*^9}, {3.462275138501328*^9, 
   3.462275139957617*^9}, {3.46234788175984*^9, 3.462348122512371*^9}, 
   3.4623482295787783`*^9, {3.4623482842359877`*^9, 3.462348387985971*^9}, {
   3.462348421996244*^9, 3.4623484437086973`*^9}, {3.462348522684627*^9, 
   3.4623485548709183`*^9}, {3.462348587468162*^9, 3.462348642500746*^9}, {
   3.462348697121873*^9, 3.462348752920375*^9}, {3.462348787009604*^9, 
   3.462348787441475*^9}, {3.462349071689938*^9, 3.462349137835346*^9}, {
   3.462349173246831*^9, 3.4623492290939083`*^9}, {3.4623497284275837`*^9, 
   3.462349729186184*^9}, {3.4623497752103453`*^9, 3.462349791104409*^9}, {
   3.462349858033889*^9, 3.462349882894371*^9}, {3.4623499323641453`*^9, 
   3.46235000251151*^9}, {3.462350046833543*^9, 3.462350047879149*^9}, {
   3.4623501189856033`*^9, 3.462350243249806*^9}, {3.4623503238325567`*^9, 
   3.462350342270063*^9}, {3.462350433110629*^9, 3.462350453905758*^9}, {
   3.462350519584169*^9, 3.4623505228081703`*^9}, {3.4623505743838167`*^9, 
   3.462350581306025*^9}, {3.462350657775859*^9, 3.4623506610164557`*^9}, {
   3.462350737872184*^9, 3.462350740965371*^9}, {3.46235083195348*^9, 
   3.462350833263344*^9}, {3.462350886593546*^9, 3.462350899500306*^9}, {
   3.462351094556012*^9, 3.462351109582985*^9}, {3.46235117070078*^9, 
   3.462351187626532*^9}, {3.462364683736898*^9, 3.462364707884121*^9}, {
   3.4623647400038567`*^9, 3.462364808493799*^9}, {3.462364843558585*^9, 
   3.462364882374638*^9}, {3.462364984935616*^9, 3.462365005060316*^9}, {
   3.46236505631356*^9, 3.462365057082583*^9}, {3.4623650900977087`*^9, 
   3.462365092736993*^9}, {3.462365131722184*^9, 3.462365266957344*^9}, {
   3.4623727984965153`*^9, 3.4623727989097347`*^9}, {3.4628833348582487`*^9, 
   3.462883445550837*^9}, {3.462883505522694*^9, 3.4628835773913107`*^9}, {
   3.4630694523505096`*^9, 3.4630694551904716`*^9}, {3.4630695192239017`*^9, 
   3.463069562902309*^9}, {3.4630696461562*^9, 3.4630696466990128`*^9}, {
   3.463120756734647*^9, 3.4631207775705423`*^9}, {3.4631208175174503`*^9, 
   3.4631208451857243`*^9}, 3.463150260286504*^9, {3.463476788929557*^9, 
   3.4634768382015467`*^9}, {3.4634793620735817`*^9, 3.463479386445141*^9}, {
   3.465021760980729*^9, 3.465021767195125*^9}, {3.465021897191257*^9, 
   3.4650218983630753`*^9}, {3.465021952315866*^9, 3.4650220402776747`*^9}, {
   3.465022081894753*^9, 3.465022114413113*^9}, {3.465022196158092*^9, 
   3.465022213264379*^9}, {3.4650224738592463`*^9, 3.465022480471163*^9}, {
   3.46502259987599*^9, 3.465022645707231*^9}, {3.465022691868189*^9, 
   3.465022715242585*^9}, {3.465022814528327*^9, 3.465022837893292*^9}, {
   3.465022892283493*^9, 3.465022986753963*^9}, {3.465023019938786*^9, 
   3.46502307093573*^9}, {3.465023101641574*^9, 3.46502313584261*^9}, {
   3.4650231988998632`*^9, 3.465023272343114*^9}, {3.465023344569468*^9, 
   3.46502334521966*^9}, {3.465062506865981*^9, 3.465062530485601*^9}, {
   3.4755919809298353`*^9, 3.475591987783046*^9}, {3.496564918765085*^9, 
   3.4965649450003643`*^9}, {3.496565032246093*^9, 3.496565034020396*^9}, {
   3.5052075403301086`*^9, 3.5052075525884333`*^9}, {3.5052076286021442`*^9, 
   3.50520776391759*^9}, {3.50520779582091*^9, 3.505207819710465*^9}, {
   3.505207872985655*^9, 3.5052078903918047`*^9}, {3.505208140040234*^9, 
   3.5052081597978163`*^9}, {3.505210237427149*^9, 3.505210265715802*^9}, {
   3.505216525013006*^9, 3.505216569045376*^9}, {3.505216720045308*^9, 
   3.505216720294045*^9}, {3.505652741151512*^9, 3.505652743509832*^9}, {
   3.50571013246937*^9, 3.505710132970416*^9}, {3.505797274357285*^9, 
   3.505797315692325*^9}, {3.505797437682601*^9, 3.505797555280465*^9}, {
   3.505798052999724*^9, 3.5057980680537357`*^9}, {3.505798432525778*^9, 
   3.505798434301127*^9}, {3.505798678946624*^9, 3.505798700366281*^9}, {
   3.505798851762347*^9, 3.5057988523340197`*^9}, {3.5057989011572113`*^9, 
   3.505798909964376*^9}, {3.505799205108653*^9, 3.505799215445499*^9}, {
   3.505802532027081*^9, 3.505802539840952*^9}, {3.505802594256713*^9, 
   3.505802655970275*^9}, {3.5058030141477613`*^9, 3.505803026209778*^9}, {
   3.505803286026801*^9, 3.505803292284811*^9}, {3.505803533039358*^9, 
   3.505803541170051*^9}, {3.505803571650755*^9, 3.505803576945292*^9}, {
   3.50580372099791*^9, 3.5058037776494083`*^9}, {3.505803895381525*^9, 
   3.505803902640271*^9}, 3.505803990752262*^9, {3.5058197949984283`*^9, 
   3.505819856418776*^9}, {3.505819891392376*^9, 3.505819903720119*^9}, {
   3.505819991213922*^9, 3.505820016882159*^9}, 3.505820796573162*^9, {
   3.5058238618420563`*^9, 3.505823889928733*^9}, {3.506168645285718*^9, 
   3.506168728206676*^9}, {3.50616877504486*^9, 3.506168842392514*^9}, {
   3.5061689675679207`*^9, 3.506168968640077*^9}, {3.506169044940772*^9, 
   3.506169079300478*^9}, {3.506169115098784*^9, 3.5061692357836323`*^9}, {
   3.507300712278592*^9, 3.507300729564423*^9}, {3.507300763740322*^9, 
   3.5073007658748837`*^9}, {3.507300800439237*^9, 3.507300840964838*^9}, {
   3.508666618074706*^9, 3.508666693990324*^9}, {3.508667011705964*^9, 
   3.508667049303257*^9}, {3.508667106109235*^9, 3.508667133838726*^9}, {
   3.5086671872277718`*^9, 3.508667191121052*^9}, 3.5087629800199947`*^9, {
   3.510515671072926*^9, 3.5105156722863493`*^9}, 3.510515704585244*^9, {
   3.510515748250605*^9, 3.510515748986026*^9}, {3.510515831039641*^9, 
   3.5105158318861017`*^9}, {3.510515869750559*^9, 3.510515870069312*^9}, 
   3.510516087810955*^9, {3.510516302630595*^9, 3.510516302885994*^9}, {
   3.525436910167745*^9, 3.5254369707783422`*^9}, {3.525437077209509*^9, 
   3.52543713914507*^9}, {3.525437481359586*^9, 3.525437637659527*^9}, 
   3.5254377491632357`*^9, {3.5254378093149433`*^9, 3.525437811833892*^9}, {
   3.525438838552902*^9, 3.525438865331048*^9}, {3.525504699072489*^9, 
   3.525504729262497*^9}, {3.525505301195244*^9, 3.5255053026883698`*^9}, {
   3.526025990165853*^9, 3.5260260043826647`*^9}, {3.526026113459373*^9, 
   3.526026143965246*^9}, {3.526026186577667*^9, 3.526026265642268*^9}, {
   3.5260264279465714`*^9, 3.526026435003813*^9}, 3.5260264725684757`*^9, {
   3.526026735916112*^9, 3.526026742801834*^9}, {3.526026876966236*^9, 
   3.526026979536079*^9}, {3.526027035402011*^9, 3.526027050041754*^9}, {
   3.526027212350835*^9, 3.526027215464404*^9}, {3.526027306073091*^9, 
   3.526027309021729*^9}, {3.5260310533167973`*^9, 3.52603113320536*^9}, {
   3.5260311768692427`*^9, 3.5260312832599993`*^9}, {3.526046437416829*^9, 
   3.526046477004168*^9}, {3.5260537310455637`*^9, 3.526053817827057*^9}, {
   3.526053863947104*^9, 3.526053872102297*^9}, {3.5273155081159277`*^9, 
   3.527315513342887*^9}, {3.527315792570215*^9, 3.527315795238312*^9}, 
   3.529226603909149*^9, {3.529226651849318*^9, 3.529226653663245*^9}, {
   3.53034492170347*^9, 3.5303449239591103`*^9}, {3.530345471238152*^9, 
   3.530345508204623*^9}, {3.530345602012376*^9, 3.530345663639036*^9}, {
   3.5303456936609583`*^9, 3.530345721068812*^9}, {3.5303489233646183`*^9, 
   3.530348937325623*^9}, {3.5303489794412203`*^9, 3.530349003514093*^9}, {
   3.530351127976215*^9, 3.530351157457992*^9}, {3.5303513260980053`*^9, 
   3.530351359120994*^9}, 3.53035271555875*^9, {3.530352845520018*^9, 
   3.530352864724221*^9}, {3.530352904965967*^9, 3.530352949516265*^9}, {
   3.530352987432495*^9, 3.530352987942299*^9}, 3.5303541529822807`*^9, 
   3.533018763046192*^9, {3.53301936684086*^9, 3.533019438395524*^9}, {
   3.5330207755771513`*^9, 3.533020777672593*^9}, {3.5330213111732492`*^9, 
   3.53302136289396*^9}, {3.5330214058023863`*^9, 3.5330214501354923`*^9}, {
   3.5330218391581573`*^9, 3.533022004628594*^9}, {3.5330220921222963`*^9, 
   3.533022107633441*^9}, {3.533022207714275*^9, 3.5330222949889803`*^9}, {
   3.533022374575259*^9, 3.533022387110306*^9}, {3.5330224639061117`*^9, 
   3.533022466218742*^9}, {3.533022538086527*^9, 3.533022554844483*^9}, {
   3.533023491667756*^9, 3.533023492796386*^9}, {3.541051044993966*^9, 
   3.541051125902813*^9}, {3.541054267846696*^9, 3.541054270204547*^9}, 
   3.541251939663055*^9, {3.5415078814766617`*^9, 3.541508010049552*^9}, {
   3.54192465480401*^9, 3.5419246729541903`*^9}, {3.541924802820507*^9, 
   3.541924922014784*^9}, {3.541925639733989*^9, 3.5419257666308203`*^9}, {
   3.5419279767683687`*^9, 3.5419280912439137`*^9}, {3.541928158448062*^9, 
   3.541928182414392*^9}, 3.541928357751875*^9, {3.541928616642281*^9, 
   3.541928712474059*^9}, 3.5419288963272543`*^9, {3.541928941247116*^9, 
   3.541929090938717*^9}, {3.5419291632286673`*^9, 3.54192916823847*^9}, {
   3.54192941970718*^9, 3.541929421281595*^9}, {3.541929535158095*^9, 
   3.541929570647264*^9}, {3.541929610125646*^9, 3.541929728254928*^9}, {
   3.54192976330678*^9, 3.541929836209346*^9}, {3.541937972791244*^9, 
   3.541937998649229*^9}, {3.543829257354434*^9, 3.543829264009527*^9}, {
   3.568450632915908*^9, 3.568450828240795*^9}, 3.568450916347712*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GenerateRandomNodePositions", "[", 
    RowBox[{"size_Integer", ",", "mindist_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ii", ",", "jj", ",", "tooclose", ",", "temppos", ",", 
       RowBox[{"pos", "=", 
        RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"ii", "=", "1"}], ",", 
        RowBox[{"ii", "\[LessEqual]", "size"}], ",", 
        RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"temppos", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RandomReal", "[", "]"}], ",", 
            RowBox[{"RandomReal", "[", "]"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"tooclose", "=", "False"}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"jj", "=", "1"}], ",", 
           RowBox[{"jj", "<", "ii"}], ",", 
           RowBox[{"jj", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Norm", "[", 
                RowBox[{"Transpose", "@", 
                 RowBox[{"{", 
                  RowBox[{"temppos", "-", 
                   RowBox[{
                   "pos", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], "<", 
               "mindist"}], ",", 
              RowBox[{
               RowBox[{"tooclose", "=", "True"}], ";", 
               RowBox[{"jj", "=", 
                RowBox[{"ii", "+", "1"}]}], ";", 
               RowBox[{"ii", "--"}], ";"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"tooclose", "\[Equal]", "False"}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"pos", ",", "temppos"}], "]"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "pos", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4608884276377296`*^9, 3.46088867622223*^9}, {
  3.4608887097561693`*^9, 3.460888740914686*^9}, {3.460888852508419*^9, 
  3.4608888948481283`*^9}, {3.460889026208704*^9, 3.460889068515997*^9}, {
  3.460889109395508*^9, 3.460889121312893*^9}, {3.460889178679392*^9, 
  3.4608891808612213`*^9}, {3.462111466086878*^9, 3.4621114805894823`*^9}, {
  3.506177246592215*^9, 3.506177323170208*^9}, {3.512808680448298*^9, 
  3.512808683454626*^9}, {3.568451614123329*^9, 3.568451685972802*^9}, {
  3.568451716236635*^9, 3.568451747386985*^9}, {3.5684517882370043`*^9, 
  3.568451801172196*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GenerateNetworkTopologyAccordingToGivenKernel", "[", 
     RowBox[{"kernel_Function", ",", "size_Integer", ",", "pos_List"}], "]"}],
     ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"adjA", ",", 
        RowBox[{"connectionsplaced", "=", "0"}], ",", "cfrom", ",", "cto", 
        ",", "tempdist", ",", 
        RowBox[{"precisiondigits", "=", "50"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"adjA", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"size", ",", "size"}], "}"}], ",", "0"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"cfrom", "=", "1"}], ",", 
         RowBox[{"cfrom", "\[LessEqual]", "size"}], ",", 
         RowBox[{"cfrom", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"ShowStatus", "[", 
            RowBox[{
            "\"\<GenerateLeogangTypeTopologyExaustively: node #\>\"", "<>", 
             RowBox[{"ToString", "@", "cfrom"}], "<>", "\"\< ...\>\""}], 
            "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"cto", "=", "1"}], ",", 
           RowBox[{"cto", "\[LessEqual]", "size"}], ",", 
           RowBox[{"cto", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"cfrom", "\[NotEqual]", "cto"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"tempdist", "=", 
               RowBox[{"Norm", "[", 
                RowBox[{
                 RowBox[{
                 "pos", "\[LeftDoubleBracket]", "cto", 
                  "\[RightDoubleBracket]"}], "-", 
                 RowBox[{
                 "pos", "\[LeftDoubleBracket]", "cfrom", 
                  "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"RandomReal", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", 
                   RowBox[{
                   "WorkingPrecision", "\[Rule]", "precisiondigits"}]}], 
                  "]"}], "\[LessEqual]", 
                 RowBox[{"kernel", "[", "tempdist", "]"}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"adjA", "\[LeftDoubleBracket]", 
                   RowBox[{"cfrom", ",", "cto"}], "\[RightDoubleBracket]"}], 
                  "=", "1"}], ";"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "adjA", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GenerateLocalNetworkTopology", "[", 
     RowBox[{
     "kernel_Function", ",", "size_Integer", ",", "pos_List", ",", 
      "cons_Integer"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"adjA", ",", "expectednumber", ",", 
        RowBox[{"rescalefactor", "=", "1"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"adjA", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"size", ",", "size"}], "}"}], ",", "0"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "collect", " ", "expected", " ", "number", " ", "of", " ", 
         "connections"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"adjA", "=", 
        RowBox[{"GenerateNetworkTopologyAccordingToGivenKernel", "[", 
         RowBox[{"kernel", ",", "size", ",", "pos"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"expectednumber", "=", 
        RowBox[{"Total", "@", 
         RowBox[{"Flatten", "@", "adjA"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<DEBUG: expectednumber = \>\"", ",", "expectednumber"}],
           "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"expectednumber", "<", "cons"}], ",", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<GenerateNetworkTopology: Warning: Only \>\"", ",", 
           "expectednumber", ",", 
           "\"\< links expected, which is less than the target number of \
\>\"", ",", "cons", ",", "\"\<!\>\""}], "]"}], ",", 
         RowBox[{"rescalefactor", "=", 
          FractionBox["cons", "expectednumber"]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"GenerateNetworkTopologyAccordingToGivenKernel", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"rescalefactor", "*", 
             RowBox[{"kernel", "[", "#", "]"}]}], ")"}], "&"}], ",", "size", 
          ",", "pos"}], "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GenerateRandomNetworkTopology", "[", 
    RowBox[{"size_Integer", ",", "pos_List", ",", "cons_Integer"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"adjA", ",", 
       RowBox[{"rescalefactor", "=", "1"}], ",", 
       RowBox[{"precisiondigits", "=", "50"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"adjA", "=", 
       RowBox[{"SparseArray", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"size", ",", "size"}], "}"}], ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rescalefactor", "=", 
       FractionBox["cons", 
        RowBox[{"size", "*", 
         RowBox[{"(", 
          RowBox[{"size", "-", "1"}], ")"}]}]]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"Return", "[", 
       RowBox[{"GenerateNetworkTopologyAccordingToGivenKernel", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", "rescalefactor", ")"}], "&"}], ",", "size", ",", 
         "pos"}], "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.506253504377101*^9, 3.506253537982912*^9}, {
   3.506253719132971*^9, 3.5062538263033257`*^9}, {3.506253859022688*^9, 
   3.506253892732245*^9}, {3.5062539248995533`*^9, 3.506254283882237*^9}, {
   3.506254332567107*^9, 3.506254441536561*^9}, {3.506254541387443*^9, 
   3.506254546945284*^9}, {3.506254591510242*^9, 3.506254595758074*^9}, {
   3.5062546341900167`*^9, 3.506254636285828*^9}, {3.5062547181504097`*^9, 
   3.5062547233819427`*^9}, {3.50625476010242*^9, 3.50625476810678*^9}, {
   3.506254819552609*^9, 3.506254935183887*^9}, {3.506254987390877*^9, 
   3.506255019300828*^9}, 3.506255134253355*^9, {3.50625528898088*^9, 
   3.5062552973631277`*^9}, {3.506257828468667*^9, 3.5062578311548767`*^9}, {
   3.5062586133995857`*^9, 3.506258614872712*^9}, {3.506314222485445*^9, 
   3.5063142249279633`*^9}, {3.506320263279603*^9, 3.506320284963134*^9}, {
   3.50675359495568*^9, 3.506753662023335*^9}, {3.506754005736342*^9, 
   3.506754097034329*^9}, 3.5067541827618732`*^9, {3.506757282802465*^9, 
   3.506757283249208*^9}, {3.506757322910942*^9, 3.506757362284133*^9}, {
   3.506757396004675*^9, 3.506757489180408*^9}, {3.5067575862767773`*^9, 
   3.506757599725334*^9}, {3.506757665206327*^9, 3.506757730871627*^9}, {
   3.506757769239047*^9, 3.506757875736199*^9}, {3.5067579192396812`*^9, 
   3.50675794749872*^9}, {3.506758735363421*^9, 3.5067587376744432`*^9}, {
   3.50675876901062*^9, 3.506758771688734*^9}, {3.5067588936496153`*^9, 
   3.506758896287771*^9}, {3.506758931534462*^9, 3.5067589355412493`*^9}, {
   3.506758966367621*^9, 3.506758966710524*^9}, {3.5067590200416737`*^9, 
   3.5067590208792877`*^9}, {3.5067590841361647`*^9, 
   3.5067591309436903`*^9}, {3.5067592124505672`*^9, 3.506759222563396*^9}, {
   3.506759264843575*^9, 3.506759474939003*^9}, {3.506759552133651*^9, 
   3.5067597267610273`*^9}, {3.5067597582207003`*^9, 3.506759771801045*^9}, {
   3.506763012421007*^9, 3.506763016145859*^9}, {3.50676304621777*^9, 
   3.506763050423307*^9}, {3.506763088301714*^9, 3.5067631126733723`*^9}, {
   3.506763155655128*^9, 3.506763194592174*^9}, 3.506763226853368*^9, {
   3.506763340578719*^9, 3.506763362753117*^9}, {3.506763426426278*^9, 
   3.506763461720254*^9}, {3.506763558947563*^9, 3.506763604994998*^9}, 
   3.506765313092411*^9, {3.506765856617434*^9, 3.506765859352132*^9}, {
   3.506766027033307*^9, 3.506766028709216*^9}, {3.506766109977899*^9, 
   3.506766134445388*^9}, {3.506766165417754*^9, 3.506766165480523*^9}, {
   3.506766257466371*^9, 3.506766325834133*^9}, {3.50676639886263*^9, 
   3.506766400486158*^9}, {3.5067666267233877`*^9, 3.5067666633201303`*^9}, {
   3.512808979233173*^9, 3.5128090196428137`*^9}, {3.51280916303102*^9, 
   3.512809265807953*^9}, {3.512809296613386*^9, 3.512809328122861*^9}, 
   3.512809391950983*^9, {3.512809722149685*^9, 3.512809723172922*^9}, {
   3.512809872688538*^9, 3.512809894283533*^9}, 3.512811729458089*^9, {
   3.512811856149702*^9, 3.512811858820929*^9}, {3.515316626000268*^9, 
   3.515316630373827*^9}, {3.515316894550386*^9, 3.515316897650588*^9}, {
   3.5153169614756536`*^9, 3.515316987815646*^9}, {3.515332072553606*^9, 
   3.5153321169212646`*^9}, {3.51533221251582*^9, 3.515332226657258*^9}, {
   3.515332300590351*^9, 3.515332305483651*^9}, {3.515332374611464*^9, 
   3.5153323929861803`*^9}, {3.5156827517258377`*^9, 3.515682755425549*^9}, {
   3.5684519753180647`*^9, 3.568451995368876*^9}, {3.568452029482538*^9, 
   3.568452034459351*^9}, 3.56845214938305*^9, {3.5684522011593122`*^9, 
   3.568452433723934*^9}, {3.5684524650493107`*^9, 3.568452495267255*^9}, {
   3.568452646840012*^9, 3.568452649923622*^9}, {3.568452794030635*^9, 
   3.568452797589525*^9}, {3.5684528738686953`*^9, 3.568453038378489*^9}, 
   3.5684531753330593`*^9, {3.568453345955532*^9, 3.5684533484798927`*^9}, {
   3.568455359476166*^9, 3.56845537781282*^9}, {3.579251186137302*^9, 
   3.579251210836832*^9}, {3.579251294961894*^9, 3.5792512955401573`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RewireNetworkToDesiredCC", "[", 
    RowBox[{
    "adjA_SparseArray", ",", "desiredCC_Real", ",", "toleranceCC_Real"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "quality", ",", "improvedA", ",", "tempc1", ",", "tempc2", ",", 
       "c1from", ",", "c1to", ",", "c2from", ",", "c2to", ",", "testA", ",", 
       "testconnections", ",", "xpossibletest", ",", "tempconnections", ",", 
       "tempquality", ",", "ii", ",", "lastStatusUpdate", ",", "cons", ",", 
       "initquality"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"cons", "=", 
       RowBox[{"Length", "@", 
        RowBox[{"GetConnections", "@", "adjA"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"quality", "=", 
       RowBox[{"initquality", "=", 
        RowBox[{"MeasureFullClusteringIndex", "@", "adjA"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"improvedA", "=", "adjA"}], ";", "\[IndentingNewLine]", 
      RowBox[{"lastStatusUpdate", "=", "0"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "pick", " ", "two", " ", "random", " ", "connections", " ", "and", 
         " ", "cross", " ", "them"}], ",", " ", 
        RowBox[{"to", " ", "potentially", " ", "improve", " ", "quality"}]}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"quality", "-", "desiredCC"}], "]"}], ">", "toleranceCC"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"xpossibletest", "=", "False"}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"(*", " ", 
          RowBox[{
          "finde", " ", "m\[ODoubleDot]gliche", " ", "Verbindungen", " ", 
           "f\[UDoubleDot]r", " ", "Vertauschung"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"TimeConstrained", "[", 
             RowBox[{
              RowBox[{"While", "[", 
               RowBox[{
                RowBox[{"!", "xpossibletest"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"tempc1", "=", 
                  RowBox[{"RandomInteger", "[", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "cons"}], "}"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"tempc2", "=", 
                  RowBox[{"RandomInteger", "[", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "cons"}], "}"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"While", "[", 
                  RowBox[{
                   RowBox[{"tempc2", "\[Equal]", "tempc1"}], ",", 
                   RowBox[{"tempc2", "=", 
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "cons"}], "}"}], "]"}]}]}], "]"}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"tempconnections", "=", 
                  RowBox[{"GetConnections", "@", "improvedA"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", "cons", ")"}], "\[NotEqual]", 
                    RowBox[{"Length", "@", "tempconnections"}]}], ",", 
                   RowBox[{
                    RowBox[{
                    "Print", "[", "\"\<Error: Number of cons changed!\>\"", 
                    "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"c1from", "=", 
                  RowBox[{"tempconnections", "\[LeftDoubleBracket]", 
                   RowBox[{"tempc1", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"c1to", "=", 
                  RowBox[{"tempconnections", "\[LeftDoubleBracket]", 
                   RowBox[{"tempc1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"c2from", "=", 
                  RowBox[{"tempconnections", "\[LeftDoubleBracket]", 
                   RowBox[{"tempc2", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"c2to", "=", 
                  RowBox[{"tempconnections", "\[LeftDoubleBracket]", 
                   RowBox[{"tempc2", ",", "2"}], "\[RightDoubleBracket]"}]}], 
                 ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"wenn", " ", "bei", " ", "den", " ", 
                    RowBox[{"Verb", ".", " ", "from"}], " ", "und", " ", "to",
                     " ", "ungleich"}], " ", "&&", " ", 
                    RowBox[{
                    "wenn", " ", "sie", " ", "nicht", " ", "die", " ", 
                    "gleiche", " ", 
                    RowBox[{"Verb", ".", " ", "in"}], " ", "andere", " ", 
                    "Richtung", " ", "sind"}]}], ",", " ", 
                   RowBox[{"und", " ", "die", " ", "neue", " ", 
                    RowBox[{"Verb", ".", " ", "noch"}], " ", "nicht", " ", 
                    "vorhanden", " ", "sind"}]}], " ", "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"c1from", "\[NotEqual]", "c2from"}], ")"}], "&&", 
                    
                    RowBox[{"(", 
                    RowBox[{"c1to", "\[NotEqual]", "c2to"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{"c1from", "\[NotEqual]", "c2to"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{"c1to", "\[NotEqual]", "c2from"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"improvedA", "\[LeftDoubleBracket]", 
                    RowBox[{"c1from", ",", "c2to"}], 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{"improvedA", "\[LeftDoubleBracket]", 
                    RowBox[{"c2from", ",", "c1to"}], 
                    "\[RightDoubleBracket]"}]}], "\[Equal]", "0"}], ")"}]}], 
                   ",", 
                   RowBox[{"xpossibletest", "=", "True"}]}], "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ",", "5", ",", "\"\<nix\>\""}], 
             "]"}], "\[Equal]", "\"\<nix\>\""}], ",", 
           RowBox[{
            RowBox[{
            "Print", "[", "\"\<Time out: No valid changeset found.\>\"", 
             "]"}], ";", 
            RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "erstelle", " ", "Kopie", " ", "von", " ", "der", " ", "momentanen",
            " ", "adjA", " ", "mit", " ", "den", " ", 
           RowBox[{"entspr", ".", " ", "\[CapitalADoubleDot]nderungen"}]}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"testA", "=", "improvedA"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"testA", "\[LeftDoubleBracket]", 
           RowBox[{"c1from", ",", "c1to"}], "\[RightDoubleBracket]"}], "=", 
          "0"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"testA", "\[LeftDoubleBracket]", 
           RowBox[{"c2from", ",", "c2to"}], "\[RightDoubleBracket]"}], "=", 
          "0"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"testA", "\[LeftDoubleBracket]", 
           RowBox[{"c1from", ",", "c2to"}], "\[RightDoubleBracket]"}], "=", 
          "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"testA", "\[LeftDoubleBracket]", 
           RowBox[{"c2from", ",", "c1to"}], "\[RightDoubleBracket]"}], "=", 
          "1"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"tempquality", "=", 
          RowBox[{"MeasureFullClusteringIndex", "@", "testA"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"tempquality", "-", "desiredCC"}], "]"}], "<", 
            RowBox[{"Abs", "[", 
             RowBox[{"quality", "-", "desiredCC"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"improvedA", "=", "testA"}], ";", "\[IndentingNewLine]", 
            RowBox[{"quality", "=", "tempquality"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"AbsoluteTime", "[", "]"}], ">", 
            RowBox[{"lastStatusUpdate", "+", "5"}]}], ",", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<Optimization running, current CC_Full = \>\"", ",", 
              RowBox[{"N", "@", "quality"}], ",", "\"\< ...\>\""}], "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"lastStatusUpdate", "=", 
             RowBox[{"AbsoluteTime", "[", "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<Optimization finished.\>\"", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "@", "improvedA"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4608929727689037`*^9, 3.460893007413176*^9}, {
   3.460893544785832*^9, 3.4608935625745*^9}, {3.460893663662496*^9, 
   3.460893683091605*^9}, {3.460893828631201*^9, 3.460893853161272*^9}, {
   3.4608939728786*^9, 3.460894059258505*^9}, {3.460894098290123*^9, 
   3.4608940985370483`*^9}, {3.460894130952718*^9, 3.460894163948443*^9}, {
   3.4608942013967953`*^9, 3.4608942626284018`*^9}, {3.460894370720292*^9, 
   3.460894473105693*^9}, {3.4608945102161283`*^9, 3.46089458117372*^9}, {
   3.4608946182552547`*^9, 3.460894852587442*^9}, 3.4608956619114923`*^9, {
   3.460895693535194*^9, 3.460895784491489*^9}, {3.460895866288437*^9, 
   3.460895924027624*^9}, {3.460895972400996*^9, 3.460895986391872*^9}, {
   3.460896039728755*^9, 3.4608960441004*^9}, {3.4609701130274267`*^9, 
   3.460970115632737*^9}, {3.4619087246152067`*^9, 3.4619087401075706`*^9}, {
   3.4619088046292133`*^9, 3.461908813878846*^9}, {3.4619091692283297`*^9, 
   3.461909324567831*^9}, {3.4619093885050488`*^9, 3.461909431461382*^9}, {
   3.461909488279969*^9, 3.4619095265095987`*^9}, {3.461909601886958*^9, 
   3.461909852623147*^9}, 3.461910041525337*^9, {3.4619101005231047`*^9, 
   3.461910306963923*^9}, 3.461910343966076*^9, {3.461910422721986*^9, 
   3.461910440271099*^9}, {3.461910476699972*^9, 3.461910539986165*^9}, {
   3.461910701545953*^9, 3.461910749568408*^9}, {3.461911388227563*^9, 
   3.461911482159155*^9}, {3.461912040657757*^9, 3.461912065299961*^9}, {
   3.4619297011053534`*^9, 3.461929711552731*^9}, {3.461929809513247*^9, 
   3.4619298204305067`*^9}, {3.4619299032536383`*^9, 
   3.4619299037464952`*^9}, {3.461929996335375*^9, 3.461930002742249*^9}, {
   3.461930146112067*^9, 3.46193016543696*^9}, {3.4619301964088*^9, 
   3.461930196479397*^9}, 3.461931221246345*^9, 3.461931293231925*^9, {
   3.461931432123887*^9, 3.46193145093152*^9}, 3.4619314990794907`*^9, {
   3.461931631186105*^9, 3.4619316517961893`*^9}, {3.461931987419998*^9, 
   3.461931995211602*^9}, {3.461932210570895*^9, 3.4619322606480427`*^9}, {
   3.461932308386485*^9, 3.4619323989422092`*^9}, 3.461934266880361*^9, {
   3.461934458331654*^9, 3.4619344584320173`*^9}, {3.461934490993108*^9, 
   3.46193449914675*^9}, {3.461934589005035*^9, 3.461934591386866*^9}, {
   3.461934729356824*^9, 3.4619347452002087`*^9}, {3.461934837818243*^9, 
   3.46193488307057*^9}, {3.461934950602994*^9, 3.461934951361319*^9}, {
   3.461935574644599*^9, 3.46193558494925*^9}, 3.4619371132836447`*^9, 
   3.462107642834083*^9, 3.462108287809018*^9, {3.4621083307796297`*^9, 
   3.462108371694241*^9}, {3.462108409150013*^9, 3.462108414059938*^9}, {
   3.462108506978776*^9, 3.462108526607671*^9}, {3.462109048232091*^9, 
   3.4621091009162683`*^9}, {3.462109139779996*^9, 3.462109164217183*^9}, {
   3.462109375079802*^9, 3.46210940244693*^9}, {3.462109667134214*^9, 
   3.462109782254291*^9}, {3.4621098309252653`*^9, 3.462109851709444*^9}, {
   3.462109892121151*^9, 3.4621099031419067`*^9}, {3.462110073217064*^9, 
   3.462110073413134*^9}, {3.462110354635236*^9, 3.46211035587729*^9}, {
   3.4621104045866756`*^9, 3.462110443447137*^9}, {3.4621104813289957`*^9, 
   3.462110533067273*^9}, {3.462110574851193*^9, 3.4621107054251823`*^9}, {
   3.4621108630644207`*^9, 3.4621108638534193`*^9}, {3.46211105257952*^9, 
   3.462111076467101*^9}, {3.462111119162662*^9, 3.462111191489646*^9}, {
   3.4621113048752947`*^9, 3.462111370542012*^9}, {3.462111415287232*^9, 
   3.462111417997994*^9}, 3.4621115425820513`*^9, {3.462112225674664*^9, 
   3.462112349158847*^9}, {3.4621125729223557`*^9, 3.4621125862821293`*^9}, {
   3.462112655748226*^9, 3.462112705470963*^9}, 3.4621128238724422`*^9, 
   3.4621128548968554`*^9, 3.462112891803096*^9, {3.462180699612772*^9, 
   3.462180837483547*^9}, {3.462180868158299*^9, 3.462180868551466*^9}, 
   3.462180905607864*^9, {3.462181481943351*^9, 3.462181490983675*^9}, {
   3.4621823929758*^9, 3.4621824005205593`*^9}, {3.462182439848455*^9, 
   3.46218252196286*^9}, {3.46218446328367*^9, 3.4621844727150707`*^9}, {
   3.462191261915023*^9, 3.462191338529508*^9}, 3.46219139074405*^9, {
   3.462191455047677*^9, 3.462191470485297*^9}, {3.46219152318898*^9, 
   3.462191525194429*^9}, {3.462191580100614*^9, 3.462191580612611*^9}, 
   3.462193051456306*^9, {3.462193320379837*^9, 3.462193354678994*^9}, {
   3.4621933998164787`*^9, 3.462193476876355*^9}, {3.4621935153440104`*^9, 
   3.462193609428475*^9}, {3.462193659121464*^9, 3.462193705265017*^9}, {
   3.4621937603624067`*^9, 3.4621937806864157`*^9}, {3.462193836181603*^9, 
   3.46219389364224*^9}, {3.462193977706952*^9, 3.462193994232416*^9}, {
   3.462194071757927*^9, 3.462194078139101*^9}, {3.462209918759326*^9, 
   3.462209924197648*^9}, {3.46220998618567*^9, 3.462210027317461*^9}, {
   3.46221029926766*^9, 3.4622103307081614`*^9}, {3.4633779978195143`*^9, 
   3.463378003132738*^9}, 3.463380044819252*^9, {3.463479422958231*^9, 
   3.463479432136661*^9}, {3.46347959705168*^9, 3.463479601249243*^9}, 
   3.463481238956221*^9, {3.465063163020854*^9, 3.4650632090961943`*^9}, {
   3.515340374319878*^9, 3.515340375013829*^9}, {3.515340456694283*^9, 
   3.515340677849112*^9}, {3.5153407089957457`*^9, 3.515340719062285*^9}, {
   3.515340751355873*^9, 3.5153408294705343`*^9}, {3.515340903296754*^9, 
   3.515340944459824*^9}, 3.515341010631621*^9, {3.51534105174748*^9, 
   3.515341064960856*^9}, {3.515341102693741*^9, 3.515341120530376*^9}, {
   3.515341154425291*^9, 3.515341178549829*^9}, {3.515343148972063*^9, 
   3.515343159296968*^9}, {3.5153438252870483`*^9, 3.5153438487482023`*^9}, {
   3.528352356980527*^9, 3.528352364123351*^9}, {3.5330441293746*^9, 
   3.53304413079825*^9}, {3.533044177987919*^9, 3.5330441781725073`*^9}, {
   3.568451868100615*^9, 3.568451875598856*^9}, {3.568453267521391*^9, 
   3.568453272908985*^9}, {3.5684534409317303`*^9, 3.568453448103528*^9}, {
   3.568453482755913*^9, 3.568453510609993*^9}, {3.568454840012705*^9, 
   3.5684548512962027`*^9}, {3.5684548890011463`*^9, 3.568454904121194*^9}, {
   3.5684555386058083`*^9, 3.568455613181513*^9}, {3.5685329809571238`*^9, 
   3.5685329999981117`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"InputCluster", "[", 
    RowBox[{"adjA_SparseArray", ",", "nodeIndex_Integer"}], "]"}], ":=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Position", "[", 
     RowBox[{
      RowBox[{"Normal", "[", 
       RowBox[{"adjA", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "nodeIndex"}], "\[RightDoubleBracket]"}], "]"}], 
      ",", "1"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OutputCluster", "[", 
    RowBox[{"adjA_SparseArray", ",", "nodeIndex_Integer"}], "]"}], ":=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Position", "[", 
     RowBox[{
      RowBox[{"Normal", "[", 
       RowBox[{"adjA", "\[LeftDoubleBracket]", 
        RowBox[{"nodeIndex", ",", "All"}], "\[RightDoubleBracket]"}], "]"}], 
      ",", "1"}], "]"}]}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5810116678927526`*^9, 3.5810117484648657`*^9}, {
  3.581011971347329*^9, 3.58101197250809*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RewireNetworkToDesiredCCSmarter", "[", 
    RowBox[{
    "adjA_SparseArray", ",", "desiredCC_Real", ",", "toleranceCC_Real"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "quality", ",", "improvedA", ",", "tempc1", ",", "tempc2", ",", 
       "c1from", ",", "c1to", ",", "c2from", ",", "c2to", ",", "testA", ",", 
       "testconnections", ",", "xpossibletest", ",", "tempconnections", ",", 
       "tempquality", ",", "ii", ",", "lastStatusUpdate", ",", "cons", ",", 
       "initquality", ",", "localHeighbourhood", ",", "acceptChanges", ",", 
       "ccBefore", ",", "ccAfter"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"cons", "=", 
       RowBox[{"Length", "@", 
        RowBox[{"GetConnections", "@", "adjA"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"quality", "=", 
       RowBox[{"initquality", "=", 
        RowBox[{"MeasureFullClusteringIndex", "@", "adjA"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"improvedA", "=", "adjA"}], ";", "\[IndentingNewLine]", 
      RowBox[{"lastStatusUpdate", "=", "0"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "pick", " ", "two", " ", "random", " ", "connections", " ", "and", 
         " ", "cross", " ", "them"}], ",", " ", 
        RowBox[{"to", " ", "potentially", " ", "improve", " ", "quality"}]}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"quality", "-", "desiredCC"}], "]"}], ">", "toleranceCC"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"xpossibletest", "=", "False"}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"(*", " ", 
          RowBox[{
          "finde", " ", "m\[ODoubleDot]gliche", " ", "Verbindungen", " ", 
           "f\[UDoubleDot]r", " ", "Vertauschung"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"TimeConstrained", "[", 
             RowBox[{
              RowBox[{"While", "[", 
               RowBox[{
                RowBox[{"!", "xpossibletest"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"tempc1", "=", 
                  RowBox[{"RandomInteger", "[", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "cons"}], "}"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"tempc2", "=", 
                  RowBox[{"RandomInteger", "[", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "cons"}], "}"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"While", "[", 
                  RowBox[{
                   RowBox[{"tempc2", "\[Equal]", "tempc1"}], ",", 
                   RowBox[{"tempc2", "=", 
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "cons"}], "}"}], "]"}]}]}], "]"}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"tempconnections", "=", 
                  RowBox[{"GetConnections", "@", "improvedA"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", "cons", ")"}], "\[NotEqual]", 
                    RowBox[{"Length", "@", "tempconnections"}]}], ",", 
                   RowBox[{
                    RowBox[{
                    "Print", "[", "\"\<Error: Number of cons changed!\>\"", 
                    "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"c1from", "=", 
                  RowBox[{"tempconnections", "\[LeftDoubleBracket]", 
                   RowBox[{"tempc1", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"c1to", "=", 
                  RowBox[{"tempconnections", "\[LeftDoubleBracket]", 
                   RowBox[{"tempc1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"c2from", "=", 
                  RowBox[{"tempconnections", "\[LeftDoubleBracket]", 
                   RowBox[{"tempc2", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"c2to", "=", 
                  RowBox[{"tempconnections", "\[LeftDoubleBracket]", 
                   RowBox[{"tempc2", ",", "2"}], "\[RightDoubleBracket]"}]}], 
                 ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"wenn", " ", "bei", " ", "den", " ", 
                    RowBox[{"Verb", ".", " ", "from"}], " ", "und", " ", "to",
                     " ", "ungleich"}], " ", "&&", " ", 
                    RowBox[{
                    "wenn", " ", "sie", " ", "nicht", " ", "die", " ", 
                    "gleiche", " ", 
                    RowBox[{"Verb", ".", " ", "in"}], " ", "andere", " ", 
                    "Richtung", " ", "sind"}]}], ",", " ", 
                   RowBox[{"und", " ", "die", " ", "neue", " ", 
                    RowBox[{"Verb", ".", " ", "noch"}], " ", "nicht", " ", 
                    "vorhanden", " ", "sind"}]}], " ", "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"c1from", "\[NotEqual]", "c2from"}], ")"}], "&&", 
                    
                    RowBox[{"(", 
                    RowBox[{"c1to", "\[NotEqual]", "c2to"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{"c1from", "\[NotEqual]", "c2to"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{"c1to", "\[NotEqual]", "c2from"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"improvedA", "\[LeftDoubleBracket]", 
                    RowBox[{"c1from", ",", "c2to"}], 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{"improvedA", "\[LeftDoubleBracket]", 
                    RowBox[{"c2from", ",", "c1to"}], 
                    "\[RightDoubleBracket]"}]}], "\[Equal]", "0"}], ")"}]}], 
                   ",", 
                   RowBox[{"xpossibletest", "=", "True"}]}], "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ",", "5", ",", "\"\<nix\>\""}], 
             "]"}], "\[Equal]", "\"\<nix\>\""}], ",", 
           RowBox[{
            RowBox[{
            "Print", "[", "\"\<Time out: No valid changeset found.\>\"", 
             "]"}], ";", 
            RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "erstelle", " ", "Kopie", " ", "von", " ", "der", " ", "momentanen",
            " ", "adjA", " ", "mit", " ", "den", " ", 
           RowBox[{"entspr", ".", " ", "\[CapitalADoubleDot]nderungen"}]}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"testA", "=", "improvedA"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"testA", "\[LeftDoubleBracket]", 
           RowBox[{"c1from", ",", "c1to"}], "\[RightDoubleBracket]"}], "=", 
          "0"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"testA", "\[LeftDoubleBracket]", 
           RowBox[{"c2from", ",", "c2to"}], "\[RightDoubleBracket]"}], "=", 
          "0"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"testA", "\[LeftDoubleBracket]", 
           RowBox[{"c1from", ",", "c2to"}], "\[RightDoubleBracket]"}], "=", 
          "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"testA", "\[LeftDoubleBracket]", 
           RowBox[{"c2from", ",", "c1to"}], "\[RightDoubleBracket]"}], "=", 
          "1"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"localHeighbourhood", "=", 
          RowBox[{"DeleteDuplicates", "@", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"c1from", ",", "c1to", ",", "c2from", ",", "c2to", ",", 
              RowBox[{"InputCluster", "[", 
               RowBox[{"improvedA", ",", "c1from"}], "]"}], ",", 
              RowBox[{"OutputCluster", "[", 
               RowBox[{"improvedA", ",", "c1from"}], "]"}], ",", 
              RowBox[{"InputCluster", "[", 
               RowBox[{"improvedA", ",", "c1to"}], "]"}], ",", 
              RowBox[{"OutputCluster", "[", 
               RowBox[{"improvedA", ",", "c1to"}], "]"}], ",", 
              RowBox[{"InputCluster", "[", 
               RowBox[{"improvedA", ",", "c2from"}], "]"}], ",", 
              RowBox[{"OutputCluster", "[", 
               RowBox[{"improvedA", ",", "c2from"}], "]"}], ",", 
              RowBox[{"InputCluster", "[", 
               RowBox[{"improvedA", ",", "c2to"}], "]"}], ",", 
              RowBox[{"OutputCluster", "[", 
               RowBox[{"improvedA", ",", "c2to"}], "]"}]}], "}"}], "]"}]}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<DEBUG: size of local neighbourhood = \>\"", ",", 
             RowBox[{"Length", "@", "localHeighbourhood"}]}], "]"}], ";"}], 
          "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"tempquality", "=", 
            RowBox[{"MeasureFullClusteringIndex", "@", "testA"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"tempquality", "-", "desiredCC"}], "]"}], "<", 
              RowBox[{"Abs", "[", 
               RowBox[{"quality", "-", "desiredCC"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"improvedA", "=", "testA"}], ";", "\[IndentingNewLine]", 
              RowBox[{"quality", "=", "tempquality"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"ccBefore", "=", 
          RowBox[{"MeasureFullClusteringIndex", "[", 
           RowBox[{"improvedA", "\[LeftDoubleBracket]", 
            RowBox[{"localHeighbourhood", ",", "localHeighbourhood"}], 
            "\[RightDoubleBracket]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ccAfter", "=", 
          RowBox[{"MeasureFullClusteringIndex", "[", 
           RowBox[{"testA", "\[LeftDoubleBracket]", 
            RowBox[{"localHeighbourhood", ",", "localHeighbourhood"}], 
            "\[RightDoubleBracket]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"acceptChanges", "=", "False"}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<DEBUG: ccBefore = \>\"", ",", "ccBefore", ",", 
           "\"\<, ccAfter = \>\"", ",", "ccAfter"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"quality", "<", "desiredCC"}], ",", "\[IndentingNewLine]", 
           
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"ccAfter", ">", "ccBefore"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{"right", " ", "direction"}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"acceptChanges", "=", "True"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"Print", "[", "\"\<DEBUG: right direction!\>\"", "]"}],
                ";"}], ",", 
              RowBox[{
               RowBox[{"Print", "[", "\"\<DEBUG: wrong direction!\>\"", "]"}],
                ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"ccAfter", "<", "ccBefore"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{"right", " ", "direction"}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"acceptChanges", "=", "True"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"Print", "[", "\"\<DEBUG: right direction!\>\"", "]"}],
                ";"}], ",", 
              RowBox[{
               RowBox[{"Print", "[", "\"\<DEBUG: wrong direction!\>\"", "]"}],
                ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"acceptChanges", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"improvedA", "=", "testA"}], ";", "\[IndentingNewLine]", 
            RowBox[{"quality", "=", 
             RowBox[{"MeasureFullClusteringIndex", "[", "improvedA", "]"}]}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]",
          "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"AbsoluteTime", "[", "]"}], ">", 
            RowBox[{"lastStatusUpdate", "+", "1"}]}], ",", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<Optimization running, current CC_Full = \>\"", ",", 
              RowBox[{"N", "@", "quality"}], ",", "\"\< ...\>\""}], "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"lastStatusUpdate", "=", 
             RowBox[{"AbsoluteTime", "[", "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<Optimization finished.\>\"", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "@", "improvedA"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4608929727689037`*^9, 3.460893007413176*^9}, {
   3.460893544785832*^9, 3.4608935625745*^9}, {3.460893663662496*^9, 
   3.460893683091605*^9}, {3.460893828631201*^9, 3.460893853161272*^9}, {
   3.4608939728786*^9, 3.460894059258505*^9}, {3.460894098290123*^9, 
   3.4608940985370483`*^9}, {3.460894130952718*^9, 3.460894163948443*^9}, {
   3.4608942013967953`*^9, 3.4608942626284018`*^9}, {3.460894370720292*^9, 
   3.460894473105693*^9}, {3.4608945102161283`*^9, 3.46089458117372*^9}, {
   3.4608946182552547`*^9, 3.460894852587442*^9}, 3.4608956619114923`*^9, {
   3.460895693535194*^9, 3.460895784491489*^9}, {3.460895866288437*^9, 
   3.460895924027624*^9}, {3.460895972400996*^9, 3.460895986391872*^9}, {
   3.460896039728755*^9, 3.4608960441004*^9}, {3.4609701130274267`*^9, 
   3.460970115632737*^9}, {3.4619087246152067`*^9, 3.4619087401075706`*^9}, {
   3.4619088046292133`*^9, 3.461908813878846*^9}, {3.4619091692283297`*^9, 
   3.461909324567831*^9}, {3.4619093885050488`*^9, 3.461909431461382*^9}, {
   3.461909488279969*^9, 3.4619095265095987`*^9}, {3.461909601886958*^9, 
   3.461909852623147*^9}, 3.461910041525337*^9, {3.4619101005231047`*^9, 
   3.461910306963923*^9}, 3.461910343966076*^9, {3.461910422721986*^9, 
   3.461910440271099*^9}, {3.461910476699972*^9, 3.461910539986165*^9}, {
   3.461910701545953*^9, 3.461910749568408*^9}, {3.461911388227563*^9, 
   3.461911482159155*^9}, {3.461912040657757*^9, 3.461912065299961*^9}, {
   3.4619297011053534`*^9, 3.461929711552731*^9}, {3.461929809513247*^9, 
   3.4619298204305067`*^9}, {3.4619299032536383`*^9, 
   3.4619299037464952`*^9}, {3.461929996335375*^9, 3.461930002742249*^9}, {
   3.461930146112067*^9, 3.46193016543696*^9}, {3.4619301964088*^9, 
   3.461930196479397*^9}, 3.461931221246345*^9, 3.461931293231925*^9, {
   3.461931432123887*^9, 3.46193145093152*^9}, 3.4619314990794907`*^9, {
   3.461931631186105*^9, 3.4619316517961893`*^9}, {3.461931987419998*^9, 
   3.461931995211602*^9}, {3.461932210570895*^9, 3.4619322606480427`*^9}, {
   3.461932308386485*^9, 3.4619323989422092`*^9}, 3.461934266880361*^9, {
   3.461934458331654*^9, 3.4619344584320173`*^9}, {3.461934490993108*^9, 
   3.46193449914675*^9}, {3.461934589005035*^9, 3.461934591386866*^9}, {
   3.461934729356824*^9, 3.4619347452002087`*^9}, {3.461934837818243*^9, 
   3.46193488307057*^9}, {3.461934950602994*^9, 3.461934951361319*^9}, {
   3.461935574644599*^9, 3.46193558494925*^9}, 3.4619371132836447`*^9, 
   3.462107642834083*^9, 3.462108287809018*^9, {3.4621083307796297`*^9, 
   3.462108371694241*^9}, {3.462108409150013*^9, 3.462108414059938*^9}, {
   3.462108506978776*^9, 3.462108526607671*^9}, {3.462109048232091*^9, 
   3.4621091009162683`*^9}, {3.462109139779996*^9, 3.462109164217183*^9}, {
   3.462109375079802*^9, 3.46210940244693*^9}, {3.462109667134214*^9, 
   3.462109782254291*^9}, {3.4621098309252653`*^9, 3.462109851709444*^9}, {
   3.462109892121151*^9, 3.4621099031419067`*^9}, {3.462110073217064*^9, 
   3.462110073413134*^9}, {3.462110354635236*^9, 3.46211035587729*^9}, {
   3.4621104045866756`*^9, 3.462110443447137*^9}, {3.4621104813289957`*^9, 
   3.462110533067273*^9}, {3.462110574851193*^9, 3.4621107054251823`*^9}, {
   3.4621108630644207`*^9, 3.4621108638534193`*^9}, {3.46211105257952*^9, 
   3.462111076467101*^9}, {3.462111119162662*^9, 3.462111191489646*^9}, {
   3.4621113048752947`*^9, 3.462111370542012*^9}, {3.462111415287232*^9, 
   3.462111417997994*^9}, 3.4621115425820513`*^9, {3.462112225674664*^9, 
   3.462112349158847*^9}, {3.4621125729223557`*^9, 3.4621125862821293`*^9}, {
   3.462112655748226*^9, 3.462112705470963*^9}, 3.4621128238724422`*^9, 
   3.4621128548968554`*^9, 3.462112891803096*^9, {3.462180699612772*^9, 
   3.462180837483547*^9}, {3.462180868158299*^9, 3.462180868551466*^9}, 
   3.462180905607864*^9, {3.462181481943351*^9, 3.462181490983675*^9}, {
   3.4621823929758*^9, 3.4621824005205593`*^9}, {3.462182439848455*^9, 
   3.46218252196286*^9}, {3.46218446328367*^9, 3.4621844727150707`*^9}, {
   3.462191261915023*^9, 3.462191338529508*^9}, 3.46219139074405*^9, {
   3.462191455047677*^9, 3.462191470485297*^9}, {3.46219152318898*^9, 
   3.462191525194429*^9}, {3.462191580100614*^9, 3.462191580612611*^9}, 
   3.462193051456306*^9, {3.462193320379837*^9, 3.462193354678994*^9}, {
   3.4621933998164787`*^9, 3.462193476876355*^9}, {3.4621935153440104`*^9, 
   3.462193609428475*^9}, {3.462193659121464*^9, 3.462193705265017*^9}, {
   3.4621937603624067`*^9, 3.4621937806864157`*^9}, {3.462193836181603*^9, 
   3.46219389364224*^9}, {3.462193977706952*^9, 3.462193994232416*^9}, {
   3.462194071757927*^9, 3.462194078139101*^9}, {3.462209918759326*^9, 
   3.462209924197648*^9}, {3.46220998618567*^9, 3.462210027317461*^9}, {
   3.46221029926766*^9, 3.4622103307081614`*^9}, {3.4633779978195143`*^9, 
   3.463378003132738*^9}, 3.463380044819252*^9, {3.463479422958231*^9, 
   3.463479432136661*^9}, {3.46347959705168*^9, 3.463479601249243*^9}, 
   3.463481238956221*^9, {3.465063163020854*^9, 3.4650632090961943`*^9}, {
   3.515340374319878*^9, 3.515340375013829*^9}, {3.515340456694283*^9, 
   3.515340677849112*^9}, {3.5153407089957457`*^9, 3.515340719062285*^9}, {
   3.515340751355873*^9, 3.5153408294705343`*^9}, {3.515340903296754*^9, 
   3.515340944459824*^9}, 3.515341010631621*^9, {3.51534105174748*^9, 
   3.515341064960856*^9}, {3.515341102693741*^9, 3.515341120530376*^9}, {
   3.515341154425291*^9, 3.515341178549829*^9}, {3.515343148972063*^9, 
   3.515343159296968*^9}, {3.5153438252870483`*^9, 3.5153438487482023`*^9}, {
   3.528352356980527*^9, 3.528352364123351*^9}, {3.5330441293746*^9, 
   3.53304413079825*^9}, {3.533044177987919*^9, 3.5330441781725073`*^9}, {
   3.568451868100615*^9, 3.568451875598856*^9}, {3.568453267521391*^9, 
   3.568453272908985*^9}, {3.5684534409317303`*^9, 3.568453448103528*^9}, {
   3.568453482755913*^9, 3.568453510609993*^9}, {3.568454840012705*^9, 
   3.5684548512962027`*^9}, {3.5684548890011463`*^9, 3.568454904121194*^9}, {
   3.5684555386058083`*^9, 3.568455613181513*^9}, {3.5685329809571238`*^9, 
   3.5685329999981117`*^9}, {3.581010367394985*^9, 3.581010368536278*^9}, {
   3.58101041649124*^9, 3.5810107201040373`*^9}, {3.581010906394361*^9, 
   3.58101092965814*^9}, {3.581011095402892*^9, 3.581011099639535*^9}, {
   3.581011416862719*^9, 3.581011466184297*^9}, {3.5810117754989643`*^9, 
   3.5810117892310143`*^9}, {3.581011828101779*^9, 3.5810118793998938`*^9}, {
   3.58101203223825*^9, 3.581012034141425*^9}, 3.5810121096926317`*^9, {
   3.5810121705425043`*^9, 3.581012175026684*^9}, {3.581012294372046*^9, 
   3.581012508096843*^9}, {3.581012611989109*^9, 3.5810126455105457`*^9}, {
   3.5810126924773197`*^9, 3.5810127345312862`*^9}, {3.581012834556139*^9, 
   3.581012866912609*^9}, {3.5810130669495287`*^9, 3.581013091165845*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CHAExportNetworkToYAML", "[", 
    RowBox[{
    "adjA_SparseArray", ",", "pos_List", ",", "pars_List", ",", 
     "filename_String", ",", 
     RowBox[{"notes_String:", "\"\<\>\""}], ",", 
     RowBox[{"addintionalInfoPerNode_List:", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fstream", ",", "ii", ",", "connections", ",", "weighted", ",", 
       "infos"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fstream", "=", 
       RowBox[{"OpenWrite", "@", "filename"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"connections", "=", 
       RowBox[{"GetConnections", "@", "adjA"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"weighted", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Union", "@", 
          RowBox[{"N", "@", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Normal", "@", "adjA"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}]}], "!=", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "1."}], "}"}]}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<debug: ExportNetworkToYAML detected a \>\"", ",", 
          RowBox[{"If", "[", 
           RowBox[{
           "weighted", ",", "\"\<weighted\>\"", ",", "\"\<binary\>\""}], 
           "]"}], ",", "\"\< adjacency matrix.\>\""}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"WriteString", "[", 
       RowBox[{
       "fstream", ",", 
        "\"\<--- # network topology for http://www.chalearn.org\\n\>\""}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"write", " ", "network", " ", "parameters"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"WriteString", "[", 
       RowBox[{"fstream", ",", 
        RowBox[{"\"\<size: \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"Length", "@", "adjA"}]}], "<>", "\"\<\\n\>\""}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"WriteString", "[", 
       RowBox[{"fstream", ",", 
        RowBox[{"\"\<cons: \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"Length", "@", "connections"}]}], "<>", "\"\<\\n\>\""}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"pars", ",", 
          RowBox[{
           RowBox[{"Symbol", "[", "\"\<mindist\>\"", "]"}], "->", "_"}]}], 
         "]"}], ",", 
        RowBox[{"WriteString", "[", 
         RowBox[{"fstream", ",", 
          RowBox[{"\"\<minDist: \>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{
             RowBox[{"Symbol", "[", "\"\<mindist\>\"", "]"}], "/.", "pars"}], 
            "]"}], "<>", "\"\<\\n\>\""}]}], "]"}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringLength", "@", "notes"}], ">", "0"}], ",", 
        RowBox[{"WriteString", "[", 
         RowBox[{"fstream", ",", 
          RowBox[{"\"\<notes: \\\"\>\"", "<>", 
           RowBox[{"ToString", "@", "notes"}], "<>", "\"\<\\\"\\n\>\""}]}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"WriteString", "[", 
       RowBox[{"fstream", ",", 
        RowBox[{"\"\<createdAt: \\\"\>\"", "<>", 
         RowBox[{"DateString", "[", "]"}], "<>", "\"\<\\\"\\n\>\""}]}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"write", " ", "individual", " ", "cell", " ", "info"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"WriteString", "[", 
       RowBox[{"fstream", ",", "\"\<nodes:\\n\>\""}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"ii", "=", "1"}], ",", 
        RowBox[{"ii", "\[LessEqual]", 
         RowBox[{"Length", "@", "adjA"}]}], ",", 
        RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"WriteString", "[", 
          RowBox[{"fstream", ",", 
           RowBox[{"\"\<  - id: \>\"", "<>", 
            RowBox[{"ToString", "@", "ii"}], "<>", "\"\<\\n\>\""}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "pos"}], "\[Equal]", 
            RowBox[{"Length", "@", "adjA"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"WriteString", "[", 
            RowBox[{"fstream", ",", 
             RowBox[{"\"\<    pos: [\>\"", "<>", 
              RowBox[{"ListJoinDelimited", "[", 
               RowBox[{
                RowBox[{"pos", "[", 
                 RowBox[{"[", "ii", "]"}], "]"}], ",", "\"\<, \>\""}], "]"}], 
              "<>", "\"\<]\\n\>\""}]}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"connections", ",", 
             RowBox[{"{", 
              RowBox[{"ii", ",", "_"}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"WriteString", "[", 
             RowBox[{"fstream", ",", 
              RowBox[{"\"\<    connectedTo: [\>\"", "<>", 
               RowBox[{"ListJoinDelimited", "[", 
                RowBox[{
                 RowBox[{"Second", "@", 
                  RowBox[{"Transpose", "@", 
                   RowBox[{"Cases", "[", 
                    RowBox[{"connections", ",", 
                    RowBox[{"{", 
                    RowBox[{"ii", ",", "_"}], "}"}]}], "]"}]}]}], ",", 
                 "\"\<, \>\""}], "]"}], "<>", "\"\<]\\n\>\""}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{"weighted", ",", "\[IndentingNewLine]", 
              RowBox[{"WriteString", "[", 
               RowBox[{"fstream", ",", 
                RowBox[{"\"\<    weights: [\>\"", "<>", 
                 RowBox[{"ListJoinDelimited", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{"Extract", "[", 
                    RowBox[{"adjA", ",", "#"}], "]"}], ",", "4"}], "]"}], 
                    "&"}], "/@", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"connections", ",", 
                    RowBox[{"{", 
                    RowBox[{"ii", ",", "_"}], "}"}]}], "]"}]}], ",", 
                   "\"\<, \>\""}], "]"}], "<>", "\"\<]\\n\>\""}]}], "]"}]}], 
             "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "add", " ", "additional", " ", "infos", " ", "per", " ", "neuron"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "addintionalInfoPerNode"}], ">", "0"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"infos", "=", "addintionalInfoPerNode"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Head", "@", "infos"}], "\[Equal]", "Rule"}], ",", 
              RowBox[{"infos", "=", 
               RowBox[{"{", "infos", "}"}]}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Do", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Assert", "[", 
                RowBox[{
                 RowBox[{"Head", "@", "infoRule"}], "\[Equal]", "Rule"}], 
                "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"Assert", "[", 
                RowBox[{
                 RowBox[{"Length", "@", 
                  RowBox[{"Second", "@", "infoRule"}]}], "\[Equal]", 
                 RowBox[{"Length", "@", "adjA"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"WriteString", "[", 
                RowBox[{"fstream", ",", 
                 RowBox[{"\"\<    \>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"First", "@", "infoRule"}], "]"}], "<>", 
                  "\"\<: \>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{
                    RowBox[{"Second", "[", "infoRule", "]"}], 
                    "\[LeftDoubleBracket]", "ii", "\[RightDoubleBracket]"}], 
                   "]"}], "<>", "\"\<\\n\>\""}]}], "]"}], ";"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"infoRule", ",", "infos"}], "}"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"Close", "@", "fstream"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.568455697654162*^9, 3.5684557185397863`*^9}, {
   3.568455752061117*^9, 3.568455753917141*^9}, {3.5684558374034348`*^9, 
   3.568455842287572*^9}, {3.5945578763541327`*^9, 3.594557956817058*^9}, {
   3.5945582870401697`*^9, 3.594558291044683*^9}, {3.594558460761285*^9, 
   3.594558484238296*^9}, {3.594558719483942*^9, 3.594558855269206*^9}, {
   3.594558969304201*^9, 3.594558973162045*^9}, 3.594559060256974*^9, 
   3.5963645141172256`*^9, {3.596364551790036*^9, 3.596364585178985*^9}, {
   3.596364624836381*^9, 3.596364703106282*^9}, {3.596364757258484*^9, 
   3.596364852503783*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Create topology", "Section",
 CellChangeTimes->{{3.5684502887001667`*^9, 3.568450296417083*^9}, 
   3.568453415185622*^9}],

Cell[CellGroupData[{

Cell["\<\
1.) Set basic network parameters\
\>", "Subsection",
 CellChangeTimes->{{3.568450483288319*^9, 3.568450508442034*^9}, {
  3.568450942481145*^9, 3.5684509617163563`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"networkSize", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"minimalDistance", "=", "0.01"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"min", ".", " ", "spatial"}], " ", "distance", " ", "between", 
    " ", "two", " ", "nodes", " ", "on", " ", "the", " ", "unit", " ", 
    "square"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"overallConnectionProbability", "=", "0.12"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"outputDirectory", "=", "\"\<~/Desktop\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"outputFileName", "=", "\"\<test_network.yml\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "comment", "=", 
    "\"\<(Network generated by CHA-generate_topology.nb)\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"positions", "=", 
   RowBox[{"GenerateRandomNodePositions", "[", 
    RowBox[{"networkSize", ",", "minimalDistance"}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.568450300259409*^9, 3.568450387181954*^9}, {
   3.5684505769450417`*^9, 3.5684505874325857`*^9}, {3.568451576918058*^9, 
   3.5684515938542767`*^9}, 3.5684516777794333`*^9, 3.568451808680694*^9, 
   3.568452736968607*^9, {3.5684550980480127`*^9, 3.5684551059108458`*^9}, {
   3.568455162398122*^9, 3.568455163435685*^9}, {3.5684552522749043`*^9, 
   3.56845525236014*^9}, {3.568455448463434*^9, 3.568455486384776*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
2. Option A) Network with specified full clustering coefficient (\
\[OpenCurlyDoubleQuote]non-local clustering ensemble\[CloseCurlyDoubleQuote])\
\
\>", "Subsection",
 CellChangeTimes->{{3.568450401768691*^9, 3.5684504739929743`*^9}, {
  3.568450945266971*^9, 3.568450964354389*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"targetCC", "=", "0.3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"targetCCtolerance", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "generate", " ", "random", " ", "network", " ", "to", " ", "start", " ", 
    "with"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"adjA", "=", 
   RowBox[{"GenerateRandomNetworkTopology", "[", 
    RowBox[{"networkSize", ",", "positions", ",", 
     RowBox[{"Round", "[", 
      RowBox[{"overallConnectionProbability", "*", "networkSize", "*", 
       RowBox[{"(", 
        RowBox[{"networkSize", "-", "1"}], ")"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<initial value of CC_Full: \>\"", ",", 
     RowBox[{"MeasureFullClusteringIndex", "@", "adjA"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "rewire", " ", "network", " ", "until", " ", "target", " ", "value", " ", 
    "is", " ", "reached"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"adjA", "=", 
   RowBox[{"RewireNetworkToDesiredCC", "[", 
    RowBox[{"adjA", ",", "targetCC", ",", "targetCCtolerance"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<final value of CC_Full: \>\"", ",", 
    RowBox[{"MeasureFullClusteringIndex", "@", "adjA"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.568450554419755*^9, 3.568450561218807*^9}, {
  3.568451103183236*^9, 3.568451113118085*^9}, {3.5684531847566977`*^9, 
  3.5684532025023537`*^9}, {3.568453246389072*^9, 3.568453334666204*^9}, {
  3.568455026212019*^9, 3.56845506433665*^9}, {3.568455188049012*^9, 
  3.568455211473702*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
2. Option B) Network with specified length scale of connections (\
\[OpenCurlyDoubleQuote]local clustering ensemble\[CloseCurlyDoubleQuote])\
\>", "Subsection",
 CellChangeTimes->{{3.568450401768691*^9, 3.5684504795559473`*^9}, {
  3.568450948029088*^9, 3.5684509666291943`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"targetLambda", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"adjA", "=", 
   RowBox[{"GenerateLocalNetworkTopology", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"#", "/", "targetLambda"}], ")"}], "2"]}], "]"}], "&"}], 
     ",", "networkSize", ",", "positions", ",", 
     RowBox[{"Floor", "[", 
      RowBox[{"overallConnectionProbability", "*", "networkSize", "*", 
       RowBox[{"(", 
        RowBox[{"networkSize", "-", "1"}], ")"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.56845056667992*^9, 3.568450571906465*^9}, {
  3.568455291586535*^9, 3.5684553468363953`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"GenerateNetworkTopology: Warning: Only \"\>", 
   "\[InvisibleSpace]", "902", 
   "\[InvisibleSpace]", "\<\" links expected, which is less than the target \
number of \"\>", "\[InvisibleSpace]", "1188", 
   "\[InvisibleSpace]", "\<\"!\"\>"}],
  SequenceForm[
  "GenerateNetworkTopology: Warning: Only ", 902, 
   " links expected, which is less than the target number of ", 1188, "!"],
  Editable->False]], "Print",
 CellChangeTimes->{3.568455820495906*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["3.) Export finished network", "Subsection",
 CellChangeTimes->{{3.568450483288319*^9, 3.5684505174798603`*^9}, {
  3.568450950654492*^9, 3.568450968803804*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"parameters", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"size", "\[Rule]", "networkSize"}], ",", 
     RowBox[{"mindist", "\[Rule]", 
      RowBox[{"N", "@", "minimalDistance"}]}], ",", 
     RowBox[{"cons", "\[Rule]", 
      RowBox[{"Length", "@", 
       RowBox[{"GetConnections", "@", "adjA"}]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"CHAExportNetworkToYAML", "[", 
  RowBox[{"adjA", ",", "positions", ",", "parameters", ",", 
   RowBox[{"FileNameJoin", "@", 
    RowBox[{"{", 
     RowBox[{"outputDirectory", ",", "outputFileName"}], "}"}]}], ",", 
   "comment"}], "]"}]}], "Input",
 CellChangeTimes->{{3.568450861270238*^9, 3.5684509256137733`*^9}, {
  3.5684509985739813`*^9, 3.5684510023564243`*^9}, {3.568451053458261*^9, 
  3.5684510756451902`*^9}, {3.568455490997385*^9, 3.568455493897037*^9}, {
  3.568455659710696*^9, 3.568455670659696*^9}, {3.568455849160151*^9, 
  3.568455849382422*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Create and export a number of clustered topologies\
\>", "Section",
 CellChangeTimes->{{3.568532167168705*^9, 3.568532177995934*^9}, {
  3.5685323963114653`*^9, 3.568532397569633*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"standard", " ", "parameters"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"minimalDistance", "=", "0.01"}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"min", ".", " ", "spatial"}], " ", "distance", " ", "between", 
      " ", "two", " ", "nodes", " ", "on", " ", "the", " ", "unit", " ", 
      "square"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"overallConnectionProbability", "=", "0.12"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "outputDirectory", "=", 
     "\"\<~/Desktop/Doktorarbeit/Causality/challenge/topologies\>\""}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "comment", "=", 
     "\"\<Network generated by CHA-generate_topology.nb, 2nd run started on \
Jun 3, 2013\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"targetCCtolerance", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"parameters", " ", "to", " ", "iterate", " ", "over"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numberOfNetworks", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CClist", "=", 
     RowBox[{"Sort", "@", 
      RowBox[{"{", 
       RowBox[{
       "0.1", ",", "0.2", ",", "0.3", ",", "0.4", ",", "0.5", ",", "0.6"}], 
       "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sizelist", "=", 
     RowBox[{"{", 
      RowBox[{"(*", 
       RowBox[{"50", ",", "100", ","}], "*)"}], "500", "}"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.5685321934130917`*^9, 3.568532275184998*^9}, {
   3.568532552987536*^9, 3.5685325877265472`*^9}, {3.5685326460255013`*^9, 
   3.568532646276078*^9}, 3.568532926625987*^9, {3.5685331527104692`*^9, 
   3.568533158223733*^9}, {3.579250571762946*^9, 3.579250573649835*^9}, {
   3.579251319852293*^9, 3.57925133436446*^9}, {3.58101073547094*^9, 
   3.581010737630025*^9}, {3.59455937300296*^9, 3.594559373071599*^9}, {
   3.596365010495522*^9, 3.596365010648592*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<------ network iteration #\>\"", ",", "iNet", ",", 
       "\"\< ------\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<--- network size: \>\"", ",", "networkSize"}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"positions", "=", 
         RowBox[{"GenerateRandomNodePositions", "[", 
          RowBox[{"networkSize", ",", "minimalDistance"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "generate", " ", "random", " ", "network", " ", "to", " ", "start", 
          " ", "with"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"adjA", "=", 
         RowBox[{"GenerateRandomNetworkTopology", "[", 
          RowBox[{"networkSize", ",", "positions", ",", 
           RowBox[{"Round", "[", 
            RowBox[{"overallConnectionProbability", "*", "networkSize", "*", 
             RowBox[{"(", 
              RowBox[{"networkSize", "-", "1"}], ")"}]}], "]"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<--- target clustering index: \>\"", ",", "targetCC"}], "]"}],
            ";", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<initial value of CC_Full: \>\"", ",", 
             RowBox[{"MeasureFullClusteringIndex", "@", "adjA"}]}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"adjA", "=", 
            RowBox[{"RewireNetworkToDesiredCCSmarter", "[", 
             RowBox[{"adjA", ",", "targetCC", ",", "targetCCtolerance"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<final value of CC_Full: \>\"", ",", 
             RowBox[{"MeasureFullClusteringIndex", "@", "adjA"}]}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"parameters", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"size", "\[Rule]", "networkSize"}], ",", 
              RowBox[{"mindist", "\[Rule]", 
               RowBox[{"N", "@", "minimalDistance"}]}], ",", 
              RowBox[{"cons", "\[Rule]", 
               RowBox[{"Length", "@", 
                RowBox[{"GetConnections", "@", "adjA"}]}]}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"outputFileName", "=", 
            RowBox[{"\"\<topology_iNet\>\"", "<>", 
             RowBox[{"ToString", "[", "iNet", "]"}], "<>", "\"\<_Size\>\"", "<>", 
             RowBox[{"ToString", "[", "networkSize", "]"}], "<>", 
             "\"\<_CC\>\"", "<>", 
             RowBox[{"StringReplace", "[", 
              RowBox[{
               RowBox[{"ToString", "[", "targetCC", "]"}], ",", 
               RowBox[{"\"\<.\>\"", "\[Rule]", "\"\<\>\""}]}], "]"}], "<>", 
             "\"\<.yaml\>\""}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"CHAExportNetworkToYAML", "[", 
            RowBox[{"adjA", ",", "positions", ",", "parameters", ",", 
             RowBox[{"FileNameJoin", "@", 
              RowBox[{"{", 
               RowBox[{"outputDirectory", ",", "outputFileName"}], "}"}]}], 
             ",", "comment"}], "]"}], ";"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"targetCC", ",", "CClist"}], "}"}]}], "]"}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"networkSize", ",", "Sizelist"}], "}"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"iNet", ",", "numberOfNetworks"}], "}"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.568532282316415*^9, 3.568532381960017*^9}, {
  3.568532422826481*^9, 3.56853252617813*^9}, {3.5685325970515137`*^9, 
  3.5685327681065273`*^9}, {3.568532836681508*^9, 3.56853286075636*^9}, {
  3.572009548235538*^9, 3.572009584276944*^9}, {3.581010851983366*^9, 
  3.5810108532777023`*^9}, {3.581011059642658*^9, 3.5810110880162287`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Create and export a number of clustered topologies with cost. degree\
\>", "Section",
 CellChangeTimes->{{3.568532167168705*^9, 3.568532177995934*^9}, {
  3.5685323963114653`*^9, 3.568532397569633*^9}, {3.5850390728459673`*^9, 
  3.585039079089942*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"standard", " ", "parameters"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"minimalDistance", "=", "0.01"}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"min", ".", " ", "spatial"}], " ", "distance", " ", "between", 
     " ", "two", " ", "nodes", " ", "on", " ", "the", " ", "unit", " ", 
     "square"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"averageDegree", "=", "12"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "outputDirectory", "=", 
     "\"\<~/Desktop/Doktorarbeit/Causality/challenge/topologies\>\""}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "comment", "=", 
     "\"\<Network generated by CHA-generate_topology.nb, 3rd run started on \
Aug 9, 2013\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"targetCCtolerance", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"parameters", " ", "to", " ", "iterate", " ", "over"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numberOfNetworks", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CClist", "=", 
     RowBox[{"Sort", "@", 
      RowBox[{"{", 
       RowBox[{
       "0.1", ",", "0.2", ",", "0.3", ",", "0.4", ",", "0.5", ",", "0.6"}], 
       "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sizelist", "=", 
     RowBox[{"{", 
      RowBox[{"50", ",", "100", ",", "500"}], "}"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.5685321934130917`*^9, 3.568532275184998*^9}, {
   3.568532552987536*^9, 3.5685325877265472`*^9}, {3.5685326460255013`*^9, 
   3.568532646276078*^9}, 3.568532926625987*^9, {3.5685331527104692`*^9, 
   3.568533158223733*^9}, {3.579250571762946*^9, 3.579250573649835*^9}, {
   3.579251319852293*^9, 3.57925133436446*^9}, {3.5850390903150063`*^9, 
   3.58503912162472*^9}, 3.594549936045103*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<------ network iteration #\>\"", ",", "iNet", ",", 
       "\"\< ------\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<--- network size: \>\"", ",", "networkSize"}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"positions", "=", 
         RowBox[{"GenerateRandomNodePositions", "[", 
          RowBox[{"networkSize", ",", "minimalDistance"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "generate", " ", "random", " ", "network", " ", "to", " ", "start", 
          " ", "with"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"adjA", "=", 
         RowBox[{"GenerateRandomNetworkTopology", "[", 
          RowBox[{"networkSize", ",", "positions", ",", 
           RowBox[{"averageDegree", "*", "networkSize"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<--- target clustering index: \>\"", ",", "targetCC"}], "]"}],
            ";", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<initial value of CC_Full: \>\"", ",", 
             RowBox[{"MeasureFullClusteringIndex", "@", "adjA"}]}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"adjA", "=", 
            RowBox[{"RewireNetworkToDesiredCC", "[", 
             RowBox[{"adjA", ",", "targetCC", ",", "targetCCtolerance"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<final value of CC_Full: \>\"", ",", 
             RowBox[{"MeasureFullClusteringIndex", "@", "adjA"}]}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"parameters", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"size", "\[Rule]", "networkSize"}], ",", 
              RowBox[{"mindist", "\[Rule]", 
               RowBox[{"N", "@", "minimalDistance"}]}], ",", 
              RowBox[{"cons", "\[Rule]", 
               RowBox[{"Length", "@", 
                RowBox[{"GetConnections", "@", "adjA"}]}]}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"outputFileName", "=", 
            RowBox[{"\"\<topology_iNet\>\"", "<>", 
             RowBox[{"ToString", "[", "iNet", "]"}], "<>", "\"\<_Size\>\"", "<>", 
             RowBox[{"ToString", "[", "networkSize", "]"}], "<>", 
             "\"\<_CC\>\"", "<>", 
             RowBox[{"StringReplace", "[", 
              RowBox[{
               RowBox[{"ToString", "[", "targetCC", "]"}], ",", 
               RowBox[{"\"\<.\>\"", "\[Rule]", "\"\<\>\""}]}], "]"}], "<>", 
             "\"\<.yaml\>\""}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"CHAExportNetworkToYAML", "[", 
            RowBox[{"adjA", ",", "positions", ",", "parameters", ",", 
             RowBox[{"FileNameJoin", "@", 
              RowBox[{"{", 
               RowBox[{"outputDirectory", ",", "outputFileName"}], "}"}]}], 
             ",", "comment"}], "]"}], ";"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"targetCC", ",", "CClist"}], "}"}]}], "]"}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"networkSize", ",", "Sizelist"}], "}"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"iNet", ",", "numberOfNetworks"}], "}"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.568532282316415*^9, 3.568532381960017*^9}, {
   3.568532422826481*^9, 3.56853252617813*^9}, {3.5685325970515137`*^9, 
   3.5685327681065273`*^9}, {3.568532836681508*^9, 3.56853286075636*^9}, {
   3.572009548235538*^9, 3.572009584276944*^9}, {3.585039146901703*^9, 
   3.585039155640626*^9}, 3.594549940894227*^9}]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowSize->{898, 752},
WindowMargins->{{299, Automatic}, {Automatic, 109}},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (February 23, \
2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 175, 2, 67, "Section"],
Cell[745, 26, 1376, 40, 103, "Input",
 InitializationCell->True],
Cell[2124, 68, 17010, 300, 297, "Input",
 InitializationCell->True],
Cell[19137, 370, 2852, 65, 178, "Input",
 InitializationCell->True],
Cell[21992, 437, 10584, 219, 635, "Input",
 InitializationCell->True],
Cell[32579, 658, 16018, 294, 815, "Input",
 InitializationCell->True],
Cell[48600, 954, 979, 25, 43, "Input",
 InitializationCell->True],
Cell[49582, 981, 21357, 397, 1265, "Input",
 InitializationCell->True],
Cell[70942, 1380, 9743, 226, 643, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[80722, 1611, 128, 2, 37, "Section"],
Cell[CellGroupData[{
Cell[80875, 1617, 179, 4, 39, "Subsection"],
Cell[81057, 1623, 1538, 37, 183, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82632, 1665, 293, 6, 39, "Subsection"],
Cell[82928, 1673, 1796, 44, 202, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84761, 1722, 289, 5, 39, "Subsection"],
Cell[CellGroupData[{
Cell[85075, 1731, 753, 20, 68, "Input"],
Cell[85831, 1753, 506, 11, 20, "Print"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[86386, 1770, 166, 2, 31, "Subsection"],
Cell[86555, 1774, 963, 22, 69, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[87567, 1802, 194, 4, 37, "Section"],
Cell[87764, 1808, 2103, 52, 178, "Input"],
Cell[89870, 1862, 4277, 90, 343, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94184, 1957, 263, 5, 67, "Section"],
Cell[94450, 1964, 1985, 49, 178, "Input"],
Cell[96438, 2015, 4100, 87, 328, "Input"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
