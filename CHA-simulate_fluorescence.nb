(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     93507,       1841]
NotebookOptionsPosition[     91924,       1783]
NotebookOutlinePosition[     92280,       1799]
CellTagsIndexPosition[     92237,       1796]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["init", "Section",
 InitializationCell->True,
 CellChangeTimes->{{3.550208402375211*^9, 3.550208404690795*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Generate", " ", "calcium", " ", "traces"}], ",", " ", 
    RowBox[{"reference", ":", " ", 
     RowBox[{"Vogelstein", " ", "und", " ", 
      RowBox[{"Paninski", ".", "Spike"}], " ", "inference", " ", "from", " ", 
      "calcium", " ", "imaging", " ", "using", " ", "sequential", "\n", 
      "Monte", " ", "Carlo", " ", 
      RowBox[{"methods", ".", "Biophysical"}], " ", "Journal", " ", 
      RowBox[{"(", "2009", ")"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "All", " ", "values", " ", "in", " ", "SI", " ", 
      
      RowBox[{"units", "!"}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"GenerateSignalCHA", "[", 
     RowBox[{
     "\[CapitalDelta]tms_Integer", ",", "endtime_", ",", "xindex_List", ",", 
      "xtimes_List", ",", "pos_List", ",", "NumNeurons_Integer", ",", 
      RowBox[{"ShowStatusQ_:", "True"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "Catemp", ",", "tt", ",", "ii", ",", "jj", ",", "jjmax", ",", 
        "starttimepoint", ",", 
        RowBox[{"starttime", "=", "0"}], ",", 
        RowBox[{"startindex", "=", "1"}], ",", 
        RowBox[{"endindex", "=", "0"}], ",", "t", ",", "\[Tau]", ",", "A", 
        ",", "Kd", ",", "\[Alpha]", ",", "nSat", ",", "\[Beta]", ",", 
        "\[Gamma]", ",", "S", ",", "\[Sigma]", ",", "\[Sigma]Scatter", ",", 
        "AScatter", ",", 
        RowBox[{"tinybit", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"localspiketimes", "=", 
         RowBox[{"{", "}"}]}], ",", "updatedtt", ",", 
        RowBox[{"xresponse2", "=", 
         RowBox[{"{", "}"}]}], ",", "ttExactMS", ",", 
        RowBox[{"xresponseindex", "=", "0"}], ",", 
        RowBox[{"ScatterAmplitudes", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"xresponse2temp", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"spikeNumber", "=", 
         RowBox[{"Length", "@", "xtimes"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", "xtimes"}], "\[NotEqual]", 
          RowBox[{"Length", "@", "xindex"}]}], ",", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<Error: spike times and indices lists are not of equal length.\
\>\"", "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Tau]", "=", "1.0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"A", "=", 
        FractionBox["50", "1"]}], ";", "\[IndentingNewLine]", 
       RowBox[{"nSat", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Kd", "=", "300"}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Sigma]", "=", "0.03"}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]", "=", "1.0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Beta]", "=", "0.0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Gamma]", "=", "0.03"}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Sigma]Scatter", "=", "0.15"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AScatter", "=", "0.15"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"S", "[", "x_", "]"}], ":=", 
        FractionBox[
         SuperscriptBox["x", "nSat"], 
         RowBox[{
          SuperscriptBox["x", "nSat"], "+", 
          SuperscriptBox["Kd", "nSat"]}]]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Catemp", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", "NumNeurons", "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "starttime", " ", "and", " ", "endtime", " ", "should", " ", "but", 
         " ", "be", " ", "integers", " ", 
         RowBox[{"(", "seconds", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"starttimepoint", "=", 
        RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"updatedtt", "=", 
        RowBox[{"-", "\[Infinity]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"xresponse2", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", "NumNeurons", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Evaluate", "@", 
            RowBox[{"Ceiling", "[", 
             RowBox[{
              RowBox[{
               FractionBox["1000", "\[CapitalDelta]tms"], 
               RowBox[{"(", 
                RowBox[{"endtime", "-", "starttime"}], ")"}]}], "+", "1"}], 
             "]"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"ttExactMS", "=", 
          RowBox[{"1000", "*", "starttime"}]}], ",", 
         RowBox[{"ttExactMS", "\[LessEqual]", 
          RowBox[{"1000", "*", "endtime"}]}], ",", 
         RowBox[{"ttExactMS", "+=", "\[CapitalDelta]tms"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"xresponseindex", "++"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{
            "at", " ", "the", " ", "beginning", " ", "of", " ", "each", " ", 
             "iteration"}], ",", " ", 
            RowBox[{"startindex", " ", "=", " ", "endindex"}]}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"tt", "=", 
           FractionBox["ttExactMS", "1000.0"]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"ShowStatusQ", ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Floor", "@", "tt"}], ">", 
               RowBox[{"updatedtt", "+", "3"}]}], ",", 
              RowBox[{
               RowBox[{"updatedtt", "=", "tt"}], ";", 
               RowBox[{"ShowStatus", "[", 
                RowBox[{"\"\<Generating fake calcium traces (\[Tau] = \>\"", "<>", 
                 RowBox[{"ToString", "@", "\[CapitalDelta]tms"}], "<>", 
                 "\"\< ms): t = \>\"", "<>", 
                 RowBox[{"ToString", "@", 
                  RowBox[{"Floor", "@", "tt"}]}], "<>", 
                 "\"\< s ... (ETA \>\"", "<>", 
                 RowBox[{"ETA", "[", 
                  RowBox[{
                   RowBox[{"tt", "-", "starttime"}], ",", 
                   RowBox[{"endtime", "-", "starttime"}], ",", 
                   "starttimepoint"}], "]"}], "<>", "\"\<)\>\""}], "]"}]}]}], 
             "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"endindex", "+", "2"}], ">", "spikeNumber"}], ",", 
            RowBox[{"Abort", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"endindex", "+", "2"}], "\[LessEqual]", 
               "spikeNumber"}], ")"}], "&&", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xtimes", "\[LeftDoubleBracket]", 
                RowBox[{"endindex", "+", "1"}], "\[RightDoubleBracket]"}], 
               "\[LessEqual]", 
               FractionBox[
                RowBox[{"ttExactMS", "+", "\[CapitalDelta]tms"}], "1000."]}], 
              ")"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"endindex", "++"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"endindex", "+", "2"}], ">", "spikeNumber"}], ",", 
            RowBox[{"Abort", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          
          RowBox[{"tinybit", "=", 
           RowBox[{"xindex", "\[LeftDoubleBracket]", 
            RowBox[{"startindex", ";;", "endindex"}], 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", "Assertions", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"endindex", "-", "startindex"}], "\[GreaterEqual]", 
             "0"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                "xtimes", "\[LeftDoubleBracket]", "startindex", 
                 "\[RightDoubleBracket]"}], "<", 
                RowBox[{"ttExactMS", "/", "1000"}]}], ",", 
               RowBox[{"Abort", "[", "]"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                "xtimes", "\[LeftDoubleBracket]", "endindex", 
                 "\[RightDoubleBracket]"}], ">", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"ttExactMS", "+", "\[CapitalDelta]tms"}], ")"}], 
                 "/", "1000"}]}], ",", 
               RowBox[{"Abort", "[", "]"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"xtimes", "\[LeftDoubleBracket]", 
                 RowBox[{"startindex", "-", "1"}], "\[RightDoubleBracket]"}], 
                ">", 
                RowBox[{"ttExactMS", "/", "1000"}]}], ",", 
               RowBox[{"Abort", "[", "]"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"xtimes", "\[LeftDoubleBracket]", 
                 RowBox[{"endindex", "+", "1"}], "\[RightDoubleBracket]"}], 
                "<", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"ttExactMS", "+", "\[CapitalDelta]tms"}], ")"}], 
                 "/", "1000"}]}], ",", 
               RowBox[{"Abort", "[", "]"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"ii", "=", "1"}], ",", 
            RowBox[{"ii", "\[LessEqual]", "NumNeurons"}], ",", 
            RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
              "Catemp", "\[LeftDoubleBracket]", "ii", 
               "\[RightDoubleBracket]"}], "=", 
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Exp", "[", 
                  RowBox[{"-", 
                   FractionBox["\[CapitalDelta]tms", 
                    RowBox[{"1000", " ", "\[Tau]"}]]}], "]"}], "*", 
                 RowBox[{
                 "Catemp", "\[LeftDoubleBracket]", "ii", 
                  "\[RightDoubleBracket]"}]}], "+", 
                RowBox[{"A", " ", 
                 RowBox[{"Count", "[", 
                  RowBox[{"tinybit", ",", "ii"}], "]"}]}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"xresponse2", "\[LeftDoubleBracket]", 
               RowBox[{"ii", ",", "xresponseindex"}], 
               "\[RightDoubleBracket]"}], "=", 
              RowBox[{
              "Catemp", "\[LeftDoubleBracket]", "ii", 
               "\[RightDoubleBracket]"}]}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"startindex", "\[LessEqual]", "endindex"}], ",", 
            RowBox[{"startindex", "=", 
             RowBox[{"endindex", "+", "1"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"startindex", ">", 
             RowBox[{"Length", "@", "xtimes"}]}], ",", 
            RowBox[{"Break", "[", "]"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"calcium", " ", "saturation"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"ShowStatusQ", ",", 
         RowBox[{
         "ShowStatus", "[", 
          "\"\<Fake calcium traces: post-processing: saturation...\>\"", 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"xresponse2", "=", 
        RowBox[{"MapToElements", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"S", "[", "#", "]"}], "&"}], ",", "xresponse2"}], "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"light", " ", "scattering"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"ShowStatusQ", ",", 
         RowBox[{
         "ShowStatus", "[", 
          "\"\<Fake calcium traces: post-processing: light scattering...\>\"",
           "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"ScatterAmplitudes", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"1", ",", 
          RowBox[{"{", "NumNeurons", "}"}], ",", 
          RowBox[{"{", "NumNeurons", "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"ii", "=", "1"}], ",", 
         RowBox[{"ii", "\[LessEqual]", "NumNeurons"}], ",", 
         RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"jj", "=", "1"}], ",", 
           RowBox[{"jj", "\[LessEqual]", "NumNeurons"}], ",", 
           RowBox[{"jj", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"ii", "\[NotEqual]", "jj"}], ",", "\[IndentingNewLine]", 
             
             RowBox[{
              RowBox[{
               RowBox[{"ScatterAmplitudes", "\[LeftDoubleBracket]", 
                RowBox[{"jj", ",", "ii"}], "\[RightDoubleBracket]"}], "=", 
               RowBox[{"AScatter", "*", 
                RowBox[{"Exp", "[", 
                 RowBox[{"-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"Norm", "[", 
                    RowBox[{
                    RowBox[{
                    "pos", "\[LeftDoubleBracket]", "ii", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "pos", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}]}], "]"}], "\[Sigma]Scatter"], 
                    ")"}], "2"]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"ScatterAmplitudes", "\[LeftDoubleBracket]", 
                RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}], "=", 
               RowBox[{"ScatterAmplitudes", "\[LeftDoubleBracket]", 
                RowBox[{"jj", ",", "ii"}], "\[RightDoubleBracket]"}]}], 
              ";"}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ScatterAmplitudes", "=", 
        RowBox[{"MapToElements", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", "<", 
              SuperscriptBox["10", 
               RowBox[{"-", "5"}]]}], ",", "0", ",", "#"}], "]"}], "&"}], ",",
           "ScatterAmplitudes"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"xresponse2temp", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{"{", "NumNeurons", "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"ii", "=", "1"}], ",", 
         RowBox[{"ii", "\[LessEqual]", "NumNeurons"}], ",", 
         RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
           "xresponse2temp", "\[LeftDoubleBracket]", "ii", 
            "\[RightDoubleBracket]"}], "=", 
           RowBox[{"Total", "@", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ScatterAmplitudes", "\[LeftDoubleBracket]", 
                RowBox[{"jj", ",", "ii"}], "\[RightDoubleBracket]"}], "*", 
               RowBox[{
               "xresponse2", "\[LeftDoubleBracket]", "jj", 
                "\[RightDoubleBracket]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"jj", ",", "NumNeurons"}], "}"}]}], "]"}]}]}], ";"}]}],
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"xresponse2", "=", "xresponse2temp"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "noise", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"ShowStatusQ", ",", 
         RowBox[{
         "ShowStatus", "[", 
          "\"\<Fake calcium traces: post-processing: camera noise...\>\"", 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"xresponse2", "=", 
        RowBox[{"MapToElements", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "+", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"NormalDistribution", "[", 
              RowBox[{"0", ",", "\[Gamma]"}], "]"}], "]"}]}], "&"}], ",", 
          "xresponse2"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"ShowStatusQ", ",", 
         RowBox[{"ShowStatus", "[", "\"\<Time series generated.\>\"", "]"}]}],
         "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "xresponse2", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4549456912290583`*^9, 3.454945717327182*^9}, {
   3.4549457556400127`*^9, 3.4549457774624147`*^9}, {3.454945812396859*^9, 
   3.454945814405295*^9}, {3.454945894858028*^9, 3.4549460158080378`*^9}, {
   3.454946211173072*^9, 3.45494625995716*^9}, {3.4549463036111927`*^9, 
   3.454946419549161*^9}, {3.454946610812855*^9, 3.4549466346018333`*^9}, {
   3.4549467184184713`*^9, 3.454946860359556*^9}, {3.454946900522703*^9, 
   3.45494717356244*^9}, {3.454947326087451*^9, 3.454947339444167*^9}, {
   3.454947445636294*^9, 3.4549474593488207`*^9}, 3.454949003999506*^9, 
   3.454949041069728*^9, {3.454949078656478*^9, 3.454949092100016*^9}, {
   3.454949237671063*^9, 3.454949264870008*^9}, {3.454949486337723*^9, 
   3.4549495260832233`*^9}, {3.454949565581251*^9, 3.454949601558152*^9}, {
   3.4549497218398523`*^9, 3.4549497219171057`*^9}, 3.454949926944269*^9, {
   3.4549499873415937`*^9, 3.454950195599504*^9}, {3.454950229618959*^9, 
   3.454950236506459*^9}, {3.45495035873857*^9, 3.454950413389318*^9}, {
   3.454951144533936*^9, 3.454951146293878*^9}, {3.4549512833549547`*^9, 
   3.4549513127932377`*^9}, {3.454982286048009*^9, 3.454982383682452*^9}, {
   3.454985756231297*^9, 3.4549857882037582`*^9}, {3.4549862869655123`*^9, 
   3.4549862884822073`*^9}, {3.454986419538773*^9, 3.454986461442212*^9}, {
   3.454986497631487*^9, 3.454986526297267*^9}, {3.45498658563833*^9, 
   3.454986591790904*^9}, 3.454986635237571*^9, 3.454987043201644*^9, {
   3.454987106809883*^9, 3.454987106953977*^9}, {3.4549872805380783`*^9, 
   3.454987311047636*^9}, {3.454987354801853*^9, 3.45498739597523*^9}, {
   3.4549874423877563`*^9, 3.454987452606429*^9}, {3.454987625130044*^9, 
   3.4549877303528843`*^9}, {3.454987850051425*^9, 3.454987852328701*^9}, {
   3.460285961337222*^9, 3.460286051424864*^9}, {3.4602875933857403`*^9, 
   3.460287632486018*^9}, {3.460287832983569*^9, 3.460287841108132*^9}, {
   3.460287878355646*^9, 3.460287878763959*^9}, {3.460287984142518*^9, 
   3.460287984237535*^9}, 3.46028818378788*^9, {3.4602895281204243`*^9, 
   3.460289530950876*^9}, {3.460289678943491*^9, 3.460289679111087*^9}, {
   3.460289751379184*^9, 3.46028975232378*^9}, {3.460289782975183*^9, 
   3.460289785044961*^9}, {3.460289831927477*^9, 3.4602898320355997`*^9}, {
   3.46028998325229*^9, 3.460290035825534*^9}, 3.460290135347784*^9, {
   3.460290695548418*^9, 3.460290753150053*^9}, {3.4602908012351093`*^9, 
   3.460290806002652*^9}, {3.460292468709482*^9, 3.460292468802133*^9}, {
   3.4603626231604843`*^9, 3.46036262347052*^9}, {3.460362663440889*^9, 
   3.4603626686015873`*^9}, {3.460439869997521*^9, 3.460439874436661*^9}, 
   3.463752240820752*^9, {3.4637525136929407`*^9, 3.4637525623748093`*^9}, {
   3.463752650972056*^9, 3.463752670762013*^9}, {3.463752726829473*^9, 
   3.463752785678903*^9}, {3.4637528437011347`*^9, 3.463752859393643*^9}, {
   3.463753156391048*^9, 3.463753160804164*^9}, {3.463753207210085*^9, 
   3.463753209543227*^9}, {3.463753375196357*^9, 3.463753377530081*^9}, {
   3.463753410513011*^9, 3.463753436060443*^9}, {3.463850086379678*^9, 
   3.4638500889661617`*^9}, {3.463850131710519*^9, 3.4638502088241663`*^9}, 
   3.463891698481681*^9, {3.4638939379122953`*^9, 3.463893953580943*^9}, 
   3.463894013972714*^9, {3.46389404905805*^9, 3.4638941728465433`*^9}, {
   3.463894464032374*^9, 3.463894580099723*^9}, {3.463894611638495*^9, 
   3.463894666344582*^9}, {3.463894704436829*^9, 3.463894710132864*^9}, {
   3.46389478951013*^9, 3.463894842640154*^9}, {3.46389488297484*^9, 
   3.463894888473138*^9}, {3.463895374861185*^9, 3.4638953778165283`*^9}, 
   3.463928932305348*^9, 3.464020558725872*^9, {3.47421918348849*^9, 
   3.474219245746931*^9}, {3.474219315969452*^9, 3.474219317828977*^9}, {
   3.474219370749679*^9, 3.474219501570003*^9}, {3.474219541784739*^9, 
   3.474219592930291*^9}, {3.4742197106823387`*^9, 3.474219723350781*^9}, {
   3.47421985403621*^9, 3.4742198546522007`*^9}, {3.4742200032858953`*^9, 
   3.474220004447291*^9}, {3.4742201644544497`*^9, 3.474220170865629*^9}, {
   3.474220621342607*^9, 3.4742206219100533`*^9}, {3.474322377466166*^9, 
   3.474322384766724*^9}, {3.4743225643061867`*^9, 3.474322595533923*^9}, {
   3.474323023756402*^9, 3.474323026123406*^9}, {3.474323124386327*^9, 
   3.474323130319131*^9}, 3.474323713615728*^9, {3.4743521458504057`*^9, 
   3.4743521484004297`*^9}, 3.474352448482965*^9, {3.4743525773877687`*^9, 
   3.474352592604135*^9}, 3.47435270749153*^9, {3.474352880104456*^9, 
   3.474352880567526*^9}, {3.474353439054021*^9, 3.474353499554606*^9}, {
   3.474353651505027*^9, 3.4743536558287907`*^9}, {3.474353715812153*^9, 
   3.4743537705173273`*^9}, {3.474353870696048*^9, 3.474353871797743*^9}, {
   3.474353966538802*^9, 3.4743539960888557`*^9}, {3.474354328241835*^9, 
   3.474354349943652*^9}, {3.4743555309156847`*^9, 3.474355549657968*^9}, {
   3.474355685447988*^9, 3.47435578621878*^9}, 3.474355834596531*^9, 
   3.474356047222618*^9, {3.474356090218635*^9, 3.474356093437419*^9}, {
   3.4743562078857718`*^9, 3.47435620982115*^9}, 3.474356443527635*^9, {
   3.474356869857345*^9, 3.474356879616056*^9}, 3.4743569739287233`*^9, {
   3.474357086102783*^9, 3.474357092770781*^9}, {3.474357202573566*^9, 
   3.474357206763567*^9}, {3.474357447372713*^9, 3.474357464874342*^9}, {
   3.474357514333816*^9, 3.474357541209401*^9}, {3.474357950529364*^9, 
   3.474357954849436*^9}, 3.474358179157937*^9, {3.474358227601289*^9, 
   3.474358236181466*^9}, {3.474368067523082*^9, 3.4743680678570633`*^9}, {
   3.474372332180629*^9, 3.474372336491754*^9}, {3.474403181697034*^9, 
   3.474403191002962*^9}, {3.474441138608654*^9, 3.474441141903487*^9}, {
   3.474441196759583*^9, 3.474441226792665*^9}, {3.474441756784438*^9, 
   3.474441787133449*^9}, {3.474442218515657*^9, 3.474442234676074*^9}, 
   3.474442593417377*^9, {3.474443041162149*^9, 3.47444304784866*^9}, {
   3.474443537292061*^9, 3.474443558072322*^9}, {3.4744436729652348`*^9, 
   3.4744436820070343`*^9}, {3.4744438447866163`*^9, 3.474443845224249*^9}, {
   3.474443891789493*^9, 3.474443908201851*^9}, {3.47444399227981*^9, 
   3.474443994669744*^9}, {3.474444136823352*^9, 3.474444141733852*^9}, {
   3.474444193996461*^9, 3.474444222608465*^9}, {3.474444273750001*^9, 
   3.47444427995715*^9}, {3.474444326738079*^9, 3.4744443458192263`*^9}, 
   3.47444551176947*^9, {3.474487262799361*^9, 3.4744873004755507`*^9}, {
   3.4744873409924393`*^9, 3.474487357663191*^9}, {3.474489226909946*^9, 
   3.4744892272371683`*^9}, {3.474489599013618*^9, 3.474489690444549*^9}, {
   3.474489890355357*^9, 3.474489890506016*^9}, {3.474535529996525*^9, 
   3.474535530899791*^9}, {3.474535639429134*^9, 3.474535645579151*^9}, {
   3.474535769444768*^9, 3.474535777857871*^9}, {3.4745364732046947`*^9, 
   3.4745364732891283`*^9}, {3.474615368770327*^9, 3.4746153725449543`*^9}, {
   3.474615733582011*^9, 3.4746158321183558`*^9}, {3.474619798254879*^9, 
   3.474619853568941*^9}, {3.474619915011479*^9, 3.4746199197453623`*^9}, {
   3.474619994026967*^9, 3.4746199950896463`*^9}, {3.4746200923309*^9, 
   3.474620099520463*^9}, {3.474620228274275*^9, 3.4746202874934063`*^9}, {
   3.474620355268066*^9, 3.474620392070333*^9}, 3.474620848165101*^9, {
   3.474620882293108*^9, 3.474620885604617*^9}, {3.4746209436935053`*^9, 
   3.474620995955873*^9}, {3.47462140266367*^9, 3.4746214518820267`*^9}, {
   3.474621506281424*^9, 3.474621535655183*^9}, {3.474621693019124*^9, 
   3.4746216960753098`*^9}, {3.474621752035667*^9, 3.474621766699831*^9}, {
   3.474621817045274*^9, 3.4746218182532988`*^9}, 3.474627617959496*^9, {
   3.474627649937199*^9, 3.474627668636877*^9}, {3.474627717345838*^9, 
   3.474627777225053*^9}, {3.474627828633946*^9, 3.4746278294238853`*^9}, 
   3.474627966882423*^9, {3.4746602612397623`*^9, 3.4746602797042294`*^9}, {
   3.474660338038744*^9, 3.474660340490457*^9}, {3.474660417151911*^9, 
   3.474660451787836*^9}, {3.475335262645149*^9, 3.475335274292102*^9}, 
   3.4753353763512278`*^9, {3.475335434124905*^9, 3.4753354342225227`*^9}, {
   3.475568479670714*^9, 3.475568484083246*^9}, {3.475685127390339*^9, 
   3.475685136830319*^9}, {3.4760827175056877`*^9, 3.476082739104711*^9}, {
   3.477320721642208*^9, 3.477320756358357*^9}, {3.477320820090035*^9, 
   3.4773208591696167`*^9}, {3.4776412899875317`*^9, 3.477641372931798*^9}, {
   3.477641408864567*^9, 3.477641516204178*^9}, {3.478256804452635*^9, 
   3.4782569792265167`*^9}, {3.4782570379890337`*^9, 3.478257049194777*^9}, {
   3.478257111379324*^9, 3.4782572121238956`*^9}, {3.47825764947543*^9, 
   3.4782577744679403`*^9}, 3.478257864880651*^9, {3.478258080534506*^9, 
   3.4782580823659163`*^9}, {3.478258112599516*^9, 3.478258248760849*^9}, {
   3.478258289123641*^9, 3.478258388794622*^9}, {3.478258431555799*^9, 
   3.478258461969769*^9}, {3.4782585725744047`*^9, 3.4782586301398697`*^9}, {
   3.478258685332403*^9, 3.478258727728793*^9}, {3.4782590427563543`*^9, 
   3.478259100934387*^9}, {3.4782592524319067`*^9, 3.478259376702317*^9}, {
   3.478259408575809*^9, 3.47825940994084*^9}, {3.478259442913913*^9, 
   3.4782596714293013`*^9}, {3.4782597446035337`*^9, 3.478259755523458*^9}, {
   3.478259862700039*^9, 3.478259865005157*^9}, {3.4782599699234543`*^9, 
   3.478259978352446*^9}, {3.478260106257105*^9, 3.478260111288556*^9}, {
   3.478260431113373*^9, 3.4782604346637783`*^9}, {3.4782604671754637`*^9, 
   3.4782604859097977`*^9}, {3.4782613798160887`*^9, 3.4782613822945642`*^9}, 
   3.4782614250097437`*^9, {3.478261464569503*^9, 3.4782614726009007`*^9}, 
   3.478261601032651*^9, 3.478268541226244*^9, {3.478268575391096*^9, 
   3.478268634969298*^9}, {3.478268735805653*^9, 3.478268780565995*^9}, {
   3.4782688200548277`*^9, 3.4782688232218523`*^9}, {3.478268976324139*^9, 
   3.478269000331582*^9}, {3.478269094940357*^9, 3.478269103734393*^9}, {
   3.478269138236505*^9, 3.4782692170460033`*^9}, {3.4782695432965927`*^9, 
   3.4782695436141777`*^9}, {3.4782696251396847`*^9, 3.478269631723925*^9}, {
   3.478270431191533*^9, 3.4782704555074472`*^9}, {3.478270731761209*^9, 
   3.478270735056882*^9}, {3.4782710527820663`*^9, 3.478271054212118*^9}, {
   3.4782710900613823`*^9, 3.478271105021641*^9}, {3.478271315982329*^9, 
   3.4782713501071863`*^9}, {3.478272554695908*^9, 3.478272556815922*^9}, {
   3.4782731617206087`*^9, 3.478273225614039*^9}, {3.478273298602879*^9, 
   3.478273323649921*^9}, 3.478273399949394*^9, {3.478273458067021*^9, 
   3.4782734603657913`*^9}, {3.4782735173396397`*^9, 3.4782735225539093`*^9}, 
   3.478273559785095*^9, 3.4783434340774183`*^9, {3.4783436950522223`*^9, 
   3.478343725646432*^9}, {3.478343786010791*^9, 3.47834405930056*^9}, {
   3.47834409274767*^9, 3.478344097219048*^9}, {3.478344274445964*^9, 
   3.478344292041132*^9}, {3.4783443388650637`*^9, 3.478344344592434*^9}, {
   3.478344464509012*^9, 3.478344480193715*^9}, {3.478348393444722*^9, 
   3.478348396323081*^9}, {3.4911974120274153`*^9, 3.4911974126508923`*^9}, {
   3.4970836577409573`*^9, 3.4970836581780233`*^9}, 3.497083704784813*^9, 
   3.497609006131056*^9, 3.4976092618908243`*^9, 3.4976093041873007`*^9, 
   3.497985270719062*^9, 3.4979863664072104`*^9, {3.49812328559988*^9, 
   3.498123286115807*^9}, {3.4981242965453033`*^9, 3.498124372064768*^9}, {
   3.4981262186181383`*^9, 3.498126235754595*^9}, {3.4981297988902283`*^9, 
   3.498129820974997*^9}, 3.4981378657491207`*^9, 3.4988960907174377`*^9, {
   3.5000097234012737`*^9, 3.5000097314788*^9}, {3.50021756048985*^9, 
   3.500217583064967*^9}, {3.504852140937113*^9, 3.504852142732789*^9}, {
   3.504852182150372*^9, 3.5048522229939327`*^9}, {3.5067718876924*^9, 
   3.506771887756486*^9}, {3.5068392495339937`*^9, 3.5068393973728857`*^9}, {
   3.508828107956986*^9, 3.5088281086763144`*^9}, {3.511081421674203*^9, 
   3.51108145654018*^9}, {3.5110814927217703`*^9, 3.5110815069174643`*^9}, {
   3.511083169799562*^9, 3.5110832527377996`*^9}, {3.5110832873954277`*^9, 
   3.51108355131828*^9}, {3.511083918559664*^9, 3.511083996086219*^9}, 
   3.511084102990651*^9, {3.511084178876913*^9, 3.511084179477242*^9}, {
   3.511084733870345*^9, 3.5110847796393633`*^9}, {3.51108520195334*^9, 
   3.511085213001623*^9}, {3.511085335240026*^9, 3.511085481971526*^9}, {
   3.5110859679036207`*^9, 3.511085979324946*^9}, {3.5110860350550947`*^9, 
   3.5110861040616817`*^9}, {3.51108614370877*^9, 3.5110861989473352`*^9}, {
   3.511086243102111*^9, 3.511086243182921*^9}, 3.51108627930967*^9, {
   3.5110863473938417`*^9, 3.511086354382628*^9}, 3.511086481657173*^9, {
   3.511086558422806*^9, 3.511086573919664*^9}, {3.511086713318865*^9, 
   3.511086713972447*^9}, {3.511086764863461*^9, 3.511086785281536*^9}, {
   3.511087162636683*^9, 3.511087163197419*^9}, {3.511087313440868*^9, 
   3.5110873428039*^9}, {3.511087379731193*^9, 3.511087574899609*^9}, {
   3.511087609160935*^9, 3.5110877727708387`*^9}, {3.511087922165127*^9, 
   3.5110879272267036`*^9}, {3.511088009543991*^9, 3.511088058579088*^9}, {
   3.511088117500565*^9, 3.511088129555978*^9}, {3.511088171056267*^9, 
   3.51108817757952*^9}, {3.511088224873226*^9, 3.511088227159239*^9}, {
   3.511088276142309*^9, 3.511088334901957*^9}, {3.511089028484161*^9, 
   3.5110890389531307`*^9}, {3.511091270462471*^9, 3.511091270565332*^9}, {
   3.5110913742559443`*^9, 3.511091374375416*^9}, {3.512896560752192*^9, 
   3.512896600593773*^9}, {3.512896659784368*^9, 3.51289668991255*^9}, {
   3.5128968363627977`*^9, 3.512896843423903*^9}, {3.512973570952599*^9, 
   3.512973574479372*^9}, {3.512977787380423*^9, 3.512977789017846*^9}, {
   3.514888933901311*^9, 3.5148890070141582`*^9}, {3.514889711422627*^9, 
   3.51488984939465*^9}, {3.514889899452092*^9, 3.51488992094508*^9}, {
   3.5148905207224493`*^9, 3.5148905914832363`*^9}, {3.5151728024099693`*^9, 
   3.5151728036479273`*^9}, 3.524297772763373*^9, {3.525523372593402*^9, 
   3.525523373555211*^9}, {3.525523406285582*^9, 3.525523407319633*^9}, {
   3.525523493874199*^9, 3.5255234949858303`*^9}, 3.525523546415794*^9, {
   3.525523603006619*^9, 3.525523623633065*^9}, {3.5255238412342176`*^9, 
   3.5255239329592648`*^9}, {3.525524197893301*^9, 3.525524229116867*^9}, {
   3.5256826194539843`*^9, 3.525682678214758*^9}, {3.5256828196265163`*^9, 
   3.5256828770458527`*^9}, {3.52568296517708*^9, 3.525682977331929*^9}, {
   3.525683011987233*^9, 3.525683027042158*^9}, {3.525683073100819*^9, 
   3.5256831512199507`*^9}, {3.525688991201181*^9, 3.525689019941607*^9}, 
   3.525691463594429*^9, {3.525691497565576*^9, 3.525691517082183*^9}, {
   3.5256928992373123`*^9, 3.525692903600862*^9}, {3.525696149605194*^9, 
   3.525696155834998*^9}, {3.525696200974188*^9, 3.525696204321774*^9}, {
   3.525696265953463*^9, 3.525696266030921*^9}, {3.525696318413308*^9, 
   3.525696322122346*^9}, {3.5256963842569637`*^9, 3.52569639990007*^9}, {
   3.5256965173023787`*^9, 3.525696528135931*^9}, {3.5256967271951733`*^9, 
   3.5256967274177713`*^9}, {3.525697318447958*^9, 3.5256973199556093`*^9}, {
   3.525697670189641*^9, 3.5256976703222723`*^9}, {3.525697928651021*^9, 
   3.525697966814355*^9}, {3.526201532088867*^9, 3.526201532324985*^9}, {
   3.5274191088392*^9, 3.527419110625495*^9}, {3.52759708182603*^9, 
   3.527597082133048*^9}, 3.52759726961434*^9, {3.527597435066*^9, 
   3.527597435151902*^9}, 3.527598691998662*^9, 3.532671588404984*^9, {
   3.532671628441197*^9, 3.532671645451033*^9}, 3.532695665750154*^9, 
   3.532695758024498*^9, 3.5327534919897013`*^9, 3.532753870933198*^9, 
   3.532754509418215*^9, 3.5327550376552753`*^9, 3.532955010492591*^9, {
   3.543724987670038*^9, 3.543725030470932*^9}, {3.543725089946938*^9, 
   3.543725093165457*^9}, {3.550413887827711*^9, 3.550413900046921*^9}, 
   3.550413956284883*^9, {3.550551974054201*^9, 3.550551984012463*^9}, {
   3.568619920597055*^9, 3.568619923481352*^9}, {3.5686199611210546`*^9, 
   3.568619961213807*^9}, 3.56862003643552*^9, {3.568620109665121*^9, 
   3.5686201914243*^9}, {3.56862022269565*^9, 3.568620277179731*^9}, {
   3.568620312831983*^9, 3.568620431930695*^9}, 3.5686205238321943`*^9, {
   3.570278924189578*^9, 3.570278936015264*^9}, {3.573039415486265*^9, 
   3.573039610447041*^9}, {3.573039675701536*^9, 3.573039691044097*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Generate", " ", "calcium", " ", "traces"}], ",", " ", 
    RowBox[{"reference", ":", " ", 
     RowBox[{"Vogelstein", " ", "und", " ", 
      RowBox[{"Paninski", ".", "Spike"}], " ", "inference", " ", "from", " ", 
      "calcium", " ", "imaging", " ", "using", " ", "sequential", "\n", 
      "Monte", " ", "Carlo", " ", 
      RowBox[{"methods", ".", "Biophysical"}], " ", "Journal", " ", 
      RowBox[{"(", "2009", ")"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "All", " ", "values", " ", "in", " ", "SI", " ", 
      
      RowBox[{"units", "!"}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "@", "GenerateSignalCHAStreamToFile"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GenerateSignalCHAStreamToFile", "[", 
      RowBox[{
      "\[CapitalDelta]tms_Integer", ",", "endtime_", ",", "xindex_List", ",", 
       "xtimes_List", ",", "pos_List", ",", "NumNeurons_Integer", ",", 
       "OutputFileName_String", ",", 
       RowBox[{"ShowStatusQ_:", "True"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "CalciumConcentrationBoundToDye", ",", "tt", ",", "ii", ",", "jj", 
         ",", "jjmax", ",", "starttimepoint", ",", 
         RowBox[{"startindex", "=", "1"}], ",", 
         RowBox[{"endindex", "=", "0"}], ",", "t", ",", "\[Tau]", ",", "A", 
         ",", "Kd", ",", "\[Alpha]", ",", "nSat", ",", "\[Beta]", ",", 
         "\[Gamma]", ",", "S", ",", "\[Sigma]", ",", "\[Sigma]Scatter", ",", 
         "AScatter", ",", 
         RowBox[{"tinybit", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"localspiketimes", "=", 
          RowBox[{"{", "}"}]}], ",", "updatedtt", ",", 
         RowBox[{"outputBuffer", "=", 
          RowBox[{"{", "}"}]}], ",", "ttExactMS", ",", 
         RowBox[{"ScatterAmplitudes", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"spikeNumber", "=", 
          RowBox[{"Length", "@", "xtimes"}]}], ",", "filestream", ",", 
         "outputStrings"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", "xtimes"}], "\[NotEqual]", 
           RowBox[{"Length", "@", "xindex"}]}], ",", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<Error: spike times and indices lists are not of equal \
length.\>\"", "]"}], ";", 
           RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]",
         "\[IndentingNewLine]", 
        RowBox[{"\[Tau]", "=", "1.0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"A", "=", 
         FractionBox["50", "1"]}], ";", "\[IndentingNewLine]", 
        RowBox[{"nSat", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Kd", "=", "300"}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Sigma]", "=", "0.03"}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Alpha]", "=", "1.0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Beta]", "=", "0.0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Gamma]", "=", "0.03"}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Sigma]Scatter", "=", "0.15"}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"AScatter", "=", "0.15"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"open", " ", "file", " ", "for", " ", "writing"}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"filestream", "=", 
         RowBox[{"OpenWrite", "[", "OutputFileName", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"compute", " ", "scattering", " ", "coefficients"}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"ScatterAmplitudes", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"1", ",", 
           RowBox[{"{", "NumNeurons", "}"}], ",", 
           RowBox[{"{", "NumNeurons", "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"ii", "=", "1"}], ",", 
          RowBox[{"ii", "\[LessEqual]", "NumNeurons"}], ",", 
          RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"jj", "=", "1"}], ",", 
            RowBox[{"jj", "\[LessEqual]", "NumNeurons"}], ",", 
            RowBox[{"jj", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"ii", "\[NotEqual]", "jj"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"ScatterAmplitudes", "\[LeftDoubleBracket]", 
                 RowBox[{"jj", ",", "ii"}], "\[RightDoubleBracket]"}], "=", 
                RowBox[{"AScatter", "*", 
                 RowBox[{"Exp", "[", 
                  RowBox[{"-", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"Norm", "[", 
                    RowBox[{
                    RowBox[{
                    "pos", "\[LeftDoubleBracket]", "ii", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "pos", "\[LeftDoubleBracket]", "jj", 
                    "\[RightDoubleBracket]"}]}], "]"}], "\[Sigma]Scatter"], 
                    ")"}], "2"]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"ScatterAmplitudes", "\[LeftDoubleBracket]", 
                 RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}], "=", 
                RowBox[{"ScatterAmplitudes", "\[LeftDoubleBracket]", 
                 RowBox[{"jj", ",", "ii"}], "\[RightDoubleBracket]"}]}], 
               ";"}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ScatterAmplitudes", "=", 
         RowBox[{"MapToElements", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"#", "<", 
               SuperscriptBox["10", 
                RowBox[{"-", "5"}]]}], ",", "0.0", ",", "#"}], "]"}], "&"}], 
           ",", "ScatterAmplitudes"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"S", "[", "x_", "]"}], ":=", 
         FractionBox[
          SuperscriptBox["x", "nSat"], 
          RowBox[{
           SuperscriptBox["x", "nSat"], "+", 
           SuperscriptBox["Kd", "nSat"]}]]}], ";", "\[IndentingNewLine]", 
        RowBox[{"CalciumConcentrationBoundToDye", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0.0", ",", 
           RowBox[{"{", "NumNeurons", "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "starttime", " ", "and", " ", "endtime", " ", "should", " ", "but", 
          " ", "be", " ", "integers", " ", 
          RowBox[{"(", "seconds", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"starttimepoint", "=", 
         RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"updatedtt", "=", 
         RowBox[{"-", "\[Infinity]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"outputBuffer", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", "NumNeurons", "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", " ", "main"}]}]}], " ", "loop", " ", "starts", " ", 
          
          RowBox[{
           RowBox[{
            RowBox[{"here", " ", "--"}], "--"}], "--"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"ttExactMS", "=", "0"}], ",", 
          RowBox[{"ttExactMS", "\[LessEqual]", 
           RowBox[{"1000", "*", "endtime"}]}], ",", 
          RowBox[{"ttExactMS", "+=", "\[CapitalDelta]tms"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{
            "at", " ", "the", " ", "beginning", " ", "of", " ", "each", " ", 
             "iteration"}], ",", " ", 
            RowBox[{"startindex", " ", "=", " ", "endindex"}]}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tt", "=", 
            FractionBox["ttExactMS", "1000.0"]}], ";", "\[IndentingNewLine]", 
           
           RowBox[{"If", "[", 
            RowBox[{"ShowStatusQ", ",", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Floor", "@", "tt"}], ">", 
                RowBox[{"updatedtt", "+", "3"}]}], ",", 
               RowBox[{
                RowBox[{"updatedtt", "=", "tt"}], ";", 
                RowBox[{"ShowStatus", "[", 
                 RowBox[{
                 "\"\<Generating fake calcium traces (\[Tau] = \>\"", "<>", 
                  RowBox[{"ToString", "@", "\[CapitalDelta]tms"}], "<>", 
                  "\"\< ms): t = \>\"", "<>", 
                  RowBox[{"ToString", "@", 
                   RowBox[{"Floor", "@", "tt"}]}], "<>", 
                  "\"\< s ... (ETA \>\"", "<>", 
                  RowBox[{"ETA", "[", 
                   RowBox[{"tt", ",", "endtime", ",", "starttimepoint"}], 
                   "]"}], "<>", "\"\<)\>\""}], "]"}]}]}], "]"}]}], "]"}], ";",
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"endindex", "+", "2"}], ">", "spikeNumber"}], ",", 
             RowBox[{"Abort", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"endindex", "+", "2"}], "\[LessEqual]", 
                "spikeNumber"}], ")"}], "&&", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"xtimes", "\[LeftDoubleBracket]", 
                 RowBox[{"endindex", "+", "1"}], "\[RightDoubleBracket]"}], 
                "\[LessEqual]", 
                FractionBox[
                 RowBox[{"ttExactMS", "+", "\[CapitalDelta]tms"}], "1000."]}],
                ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"endindex", "++"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"endindex", "+", "2"}], ">", "spikeNumber"}], ",", 
             RowBox[{"Abort", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"tinybit", "=", 
            RowBox[{"xindex", "\[LeftDoubleBracket]", 
             RowBox[{"startindex", ";;", "endindex"}], 
             "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", "Assertions", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"endindex", "-", "startindex"}], "\[GreaterEqual]", 
              "0"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                 "xtimes", "\[LeftDoubleBracket]", "startindex", 
                  "\[RightDoubleBracket]"}], "<", 
                 RowBox[{"ttExactMS", "/", "1000"}]}], ",", 
                RowBox[{"Abort", "[", "]"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                 "xtimes", "\[LeftDoubleBracket]", "endindex", 
                  "\[RightDoubleBracket]"}], ">", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"ttExactMS", "+", "\[CapitalDelta]tms"}], ")"}], 
                  "/", "1000"}]}], ",", 
                RowBox[{"Abort", "[", "]"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"xtimes", "\[LeftDoubleBracket]", 
                  RowBox[{"startindex", "-", "1"}], "\[RightDoubleBracket]"}],
                  ">", 
                 RowBox[{"ttExactMS", "/", "1000"}]}], ",", 
                RowBox[{"Abort", "[", "]"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"xtimes", "\[LeftDoubleBracket]", 
                  RowBox[{"endindex", "+", "1"}], "\[RightDoubleBracket]"}], 
                 "<", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"ttExactMS", "+", "\[CapitalDelta]tms"}], ")"}], 
                  "/", "1000"}]}], ",", 
                RowBox[{"Abort", "[", "]"}]}], "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"ii", "=", "1"}], ",", 
             RowBox[{"ii", "\[LessEqual]", "NumNeurons"}], ",", 
             RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
               "CalciumConcentrationBoundToDye", "\[LeftDoubleBracket]", "ii",
                 "\[RightDoubleBracket]"}], "=", 
               RowBox[{"N", "@", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    FractionBox["\[CapitalDelta]tms", 
                    RowBox[{"1000", " ", "\[Tau]"}]]}], "]"}], "*", 
                   RowBox[{
                   "CalciumConcentrationBoundToDye", "\[LeftDoubleBracket]", 
                    "ii", "\[RightDoubleBracket]"}]}], "+", 
                  RowBox[{"A", " ", 
                   RowBox[{"Count", "[", 
                    RowBox[{"tinybit", ",", "ii"}], "]"}]}]}], "]"}]}]}], 
              ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"outputBuffer", "=", "CalciumConcentrationBoundToDye"}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"startindex", "\[LessEqual]", "endindex"}], ",", 
             RowBox[{"startindex", "=", 
              RowBox[{"endindex", "+", "1"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"startindex", ">", 
              RowBox[{"Length", "@", "xtimes"}]}], ",", 
             RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]",
            "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"calcium", " ", "saturation"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"outputBuffer", "=", 
            RowBox[{"(", 
             RowBox[{"S", "/@", "outputBuffer"}], ")"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"light", " ", "scattering"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"outputBuffer", "=", 
            RowBox[{"ScatterAmplitudes", ".", "outputBuffer"}]}], ";", 
           RowBox[{"(*", " ", 
            RowBox[{"TEST", " ", 
             RowBox[{
              RowBox[{"THIS", "!!"}], "!"}]}], " ", "*)"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"add", " ", "noise"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"outputBuffer", "+=", 
            RowBox[{"RandomReal", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"0", ",", "\[Gamma]"}], "]"}], ",", "NumNeurons"}], 
             "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"write", " ", "to", " ", "output", " ", "stream"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"outputStrings", "=", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"ToString", "[", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"ExponentFunction", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{"Null", "&"}], ")"}]}]}], "]"}], "]"}], "&"}], "/@",
               "outputBuffer"}], ")"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"WriteString", "[", 
            RowBox[{"filestream", ",", 
             RowBox[{
              RowBox[{"StringJoin", "[", 
               RowBox[{"StringJoinDelimited", "[", 
                RowBox[{"outputStrings", ",", "\"\<, \>\""}], "]"}], "]"}], 
              "<>", "\"\<\\n\>\""}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", " ", "main"}]}]}], " ", "loop", " ", "end", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"here", " ", "--"}], "--"}], "--"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"ShowStatusQ", ",", 
          RowBox[{
          "ShowStatus", "[", "\"\<Time series generated.\>\"", "]"}]}], "]"}],
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Close", "[", "filestream", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4549456912290583`*^9, 3.454945717327182*^9}, {
   3.4549457556400127`*^9, 3.4549457774624147`*^9}, {3.454945812396859*^9, 
   3.454945814405295*^9}, {3.454945894858028*^9, 3.4549460158080378`*^9}, {
   3.454946211173072*^9, 3.45494625995716*^9}, {3.4549463036111927`*^9, 
   3.454946419549161*^9}, {3.454946610812855*^9, 3.4549466346018333`*^9}, {
   3.4549467184184713`*^9, 3.454946860359556*^9}, {3.454946900522703*^9, 
   3.45494717356244*^9}, {3.454947326087451*^9, 3.454947339444167*^9}, {
   3.454947445636294*^9, 3.4549474593488207`*^9}, 3.454949003999506*^9, 
   3.454949041069728*^9, {3.454949078656478*^9, 3.454949092100016*^9}, {
   3.454949237671063*^9, 3.454949264870008*^9}, {3.454949486337723*^9, 
   3.4549495260832233`*^9}, {3.454949565581251*^9, 3.454949601558152*^9}, {
   3.4549497218398523`*^9, 3.4549497219171057`*^9}, 3.454949926944269*^9, {
   3.4549499873415937`*^9, 3.454950195599504*^9}, {3.454950229618959*^9, 
   3.454950236506459*^9}, {3.45495035873857*^9, 3.454950413389318*^9}, {
   3.454951144533936*^9, 3.454951146293878*^9}, {3.4549512833549547`*^9, 
   3.4549513127932377`*^9}, {3.454982286048009*^9, 3.454982383682452*^9}, {
   3.454985756231297*^9, 3.4549857882037582`*^9}, {3.4549862869655123`*^9, 
   3.4549862884822073`*^9}, {3.454986419538773*^9, 3.454986461442212*^9}, {
   3.454986497631487*^9, 3.454986526297267*^9}, {3.45498658563833*^9, 
   3.454986591790904*^9}, 3.454986635237571*^9, 3.454987043201644*^9, {
   3.454987106809883*^9, 3.454987106953977*^9}, {3.4549872805380783`*^9, 
   3.454987311047636*^9}, {3.454987354801853*^9, 3.45498739597523*^9}, {
   3.4549874423877563`*^9, 3.454987452606429*^9}, {3.454987625130044*^9, 
   3.4549877303528843`*^9}, {3.454987850051425*^9, 3.454987852328701*^9}, {
   3.460285961337222*^9, 3.460286051424864*^9}, {3.4602875933857403`*^9, 
   3.460287632486018*^9}, {3.460287832983569*^9, 3.460287841108132*^9}, {
   3.460287878355646*^9, 3.460287878763959*^9}, {3.460287984142518*^9, 
   3.460287984237535*^9}, 3.46028818378788*^9, {3.4602895281204243`*^9, 
   3.460289530950876*^9}, {3.460289678943491*^9, 3.460289679111087*^9}, {
   3.460289751379184*^9, 3.46028975232378*^9}, {3.460289782975183*^9, 
   3.460289785044961*^9}, {3.460289831927477*^9, 3.4602898320355997`*^9}, {
   3.46028998325229*^9, 3.460290035825534*^9}, 3.460290135347784*^9, {
   3.460290695548418*^9, 3.460290753150053*^9}, {3.4602908012351093`*^9, 
   3.460290806002652*^9}, {3.460292468709482*^9, 3.460292468802133*^9}, {
   3.4603626231604843`*^9, 3.46036262347052*^9}, {3.460362663440889*^9, 
   3.4603626686015873`*^9}, {3.460439869997521*^9, 3.460439874436661*^9}, 
   3.463752240820752*^9, {3.4637525136929407`*^9, 3.4637525623748093`*^9}, {
   3.463752650972056*^9, 3.463752670762013*^9}, {3.463752726829473*^9, 
   3.463752785678903*^9}, {3.4637528437011347`*^9, 3.463752859393643*^9}, {
   3.463753156391048*^9, 3.463753160804164*^9}, {3.463753207210085*^9, 
   3.463753209543227*^9}, {3.463753375196357*^9, 3.463753377530081*^9}, {
   3.463753410513011*^9, 3.463753436060443*^9}, {3.463850086379678*^9, 
   3.4638500889661617`*^9}, {3.463850131710519*^9, 3.4638502088241663`*^9}, 
   3.463891698481681*^9, {3.4638939379122953`*^9, 3.463893953580943*^9}, 
   3.463894013972714*^9, {3.46389404905805*^9, 3.4638941728465433`*^9}, {
   3.463894464032374*^9, 3.463894580099723*^9}, {3.463894611638495*^9, 
   3.463894666344582*^9}, {3.463894704436829*^9, 3.463894710132864*^9}, {
   3.46389478951013*^9, 3.463894842640154*^9}, {3.46389488297484*^9, 
   3.463894888473138*^9}, {3.463895374861185*^9, 3.4638953778165283`*^9}, 
   3.463928932305348*^9, 3.464020558725872*^9, {3.47421918348849*^9, 
   3.474219245746931*^9}, {3.474219315969452*^9, 3.474219317828977*^9}, {
   3.474219370749679*^9, 3.474219501570003*^9}, {3.474219541784739*^9, 
   3.474219592930291*^9}, {3.4742197106823387`*^9, 3.474219723350781*^9}, {
   3.47421985403621*^9, 3.4742198546522007`*^9}, {3.4742200032858953`*^9, 
   3.474220004447291*^9}, {3.4742201644544497`*^9, 3.474220170865629*^9}, {
   3.474220621342607*^9, 3.4742206219100533`*^9}, {3.474322377466166*^9, 
   3.474322384766724*^9}, {3.4743225643061867`*^9, 3.474322595533923*^9}, {
   3.474323023756402*^9, 3.474323026123406*^9}, {3.474323124386327*^9, 
   3.474323130319131*^9}, 3.474323713615728*^9, {3.4743521458504057`*^9, 
   3.4743521484004297`*^9}, 3.474352448482965*^9, {3.4743525773877687`*^9, 
   3.474352592604135*^9}, 3.47435270749153*^9, {3.474352880104456*^9, 
   3.474352880567526*^9}, {3.474353439054021*^9, 3.474353499554606*^9}, {
   3.474353651505027*^9, 3.4743536558287907`*^9}, {3.474353715812153*^9, 
   3.4743537705173273`*^9}, {3.474353870696048*^9, 3.474353871797743*^9}, {
   3.474353966538802*^9, 3.4743539960888557`*^9}, {3.474354328241835*^9, 
   3.474354349943652*^9}, {3.4743555309156847`*^9, 3.474355549657968*^9}, {
   3.474355685447988*^9, 3.47435578621878*^9}, 3.474355834596531*^9, 
   3.474356047222618*^9, {3.474356090218635*^9, 3.474356093437419*^9}, {
   3.4743562078857718`*^9, 3.47435620982115*^9}, 3.474356443527635*^9, {
   3.474356869857345*^9, 3.474356879616056*^9}, 3.4743569739287233`*^9, {
   3.474357086102783*^9, 3.474357092770781*^9}, {3.474357202573566*^9, 
   3.474357206763567*^9}, {3.474357447372713*^9, 3.474357464874342*^9}, {
   3.474357514333816*^9, 3.474357541209401*^9}, {3.474357950529364*^9, 
   3.474357954849436*^9}, 3.474358179157937*^9, {3.474358227601289*^9, 
   3.474358236181466*^9}, {3.474368067523082*^9, 3.4743680678570633`*^9}, {
   3.474372332180629*^9, 3.474372336491754*^9}, {3.474403181697034*^9, 
   3.474403191002962*^9}, {3.474441138608654*^9, 3.474441141903487*^9}, {
   3.474441196759583*^9, 3.474441226792665*^9}, {3.474441756784438*^9, 
   3.474441787133449*^9}, {3.474442218515657*^9, 3.474442234676074*^9}, 
   3.474442593417377*^9, {3.474443041162149*^9, 3.47444304784866*^9}, {
   3.474443537292061*^9, 3.474443558072322*^9}, {3.4744436729652348`*^9, 
   3.4744436820070343`*^9}, {3.4744438447866163`*^9, 3.474443845224249*^9}, {
   3.474443891789493*^9, 3.474443908201851*^9}, {3.47444399227981*^9, 
   3.474443994669744*^9}, {3.474444136823352*^9, 3.474444141733852*^9}, {
   3.474444193996461*^9, 3.474444222608465*^9}, {3.474444273750001*^9, 
   3.47444427995715*^9}, {3.474444326738079*^9, 3.4744443458192263`*^9}, 
   3.47444551176947*^9, {3.474487262799361*^9, 3.4744873004755507`*^9}, {
   3.4744873409924393`*^9, 3.474487357663191*^9}, {3.474489226909946*^9, 
   3.4744892272371683`*^9}, {3.474489599013618*^9, 3.474489690444549*^9}, {
   3.474489890355357*^9, 3.474489890506016*^9}, {3.474535529996525*^9, 
   3.474535530899791*^9}, {3.474535639429134*^9, 3.474535645579151*^9}, {
   3.474535769444768*^9, 3.474535777857871*^9}, {3.4745364732046947`*^9, 
   3.4745364732891283`*^9}, {3.474615368770327*^9, 3.4746153725449543`*^9}, {
   3.474615733582011*^9, 3.4746158321183558`*^9}, {3.474619798254879*^9, 
   3.474619853568941*^9}, {3.474619915011479*^9, 3.4746199197453623`*^9}, {
   3.474619994026967*^9, 3.4746199950896463`*^9}, {3.4746200923309*^9, 
   3.474620099520463*^9}, {3.474620228274275*^9, 3.4746202874934063`*^9}, {
   3.474620355268066*^9, 3.474620392070333*^9}, 3.474620848165101*^9, {
   3.474620882293108*^9, 3.474620885604617*^9}, {3.4746209436935053`*^9, 
   3.474620995955873*^9}, {3.47462140266367*^9, 3.4746214518820267`*^9}, {
   3.474621506281424*^9, 3.474621535655183*^9}, {3.474621693019124*^9, 
   3.4746216960753098`*^9}, {3.474621752035667*^9, 3.474621766699831*^9}, {
   3.474621817045274*^9, 3.4746218182532988`*^9}, 3.474627617959496*^9, {
   3.474627649937199*^9, 3.474627668636877*^9}, {3.474627717345838*^9, 
   3.474627777225053*^9}, {3.474627828633946*^9, 3.4746278294238853`*^9}, 
   3.474627966882423*^9, {3.4746602612397623`*^9, 3.4746602797042294`*^9}, {
   3.474660338038744*^9, 3.474660340490457*^9}, {3.474660417151911*^9, 
   3.474660451787836*^9}, {3.475335262645149*^9, 3.475335274292102*^9}, 
   3.4753353763512278`*^9, {3.475335434124905*^9, 3.4753354342225227`*^9}, {
   3.475568479670714*^9, 3.475568484083246*^9}, {3.475685127390339*^9, 
   3.475685136830319*^9}, {3.4760827175056877`*^9, 3.476082739104711*^9}, {
   3.477320721642208*^9, 3.477320756358357*^9}, {3.477320820090035*^9, 
   3.4773208591696167`*^9}, {3.4776412899875317`*^9, 3.477641372931798*^9}, {
   3.477641408864567*^9, 3.477641516204178*^9}, {3.478256804452635*^9, 
   3.4782569792265167`*^9}, {3.4782570379890337`*^9, 3.478257049194777*^9}, {
   3.478257111379324*^9, 3.4782572121238956`*^9}, {3.47825764947543*^9, 
   3.4782577744679403`*^9}, 3.478257864880651*^9, {3.478258080534506*^9, 
   3.4782580823659163`*^9}, {3.478258112599516*^9, 3.478258248760849*^9}, {
   3.478258289123641*^9, 3.478258388794622*^9}, {3.478258431555799*^9, 
   3.478258461969769*^9}, {3.4782585725744047`*^9, 3.4782586301398697`*^9}, {
   3.478258685332403*^9, 3.478258727728793*^9}, {3.4782590427563543`*^9, 
   3.478259100934387*^9}, {3.4782592524319067`*^9, 3.478259376702317*^9}, {
   3.478259408575809*^9, 3.47825940994084*^9}, {3.478259442913913*^9, 
   3.4782596714293013`*^9}, {3.4782597446035337`*^9, 3.478259755523458*^9}, {
   3.478259862700039*^9, 3.478259865005157*^9}, {3.4782599699234543`*^9, 
   3.478259978352446*^9}, {3.478260106257105*^9, 3.478260111288556*^9}, {
   3.478260431113373*^9, 3.4782604346637783`*^9}, {3.4782604671754637`*^9, 
   3.4782604859097977`*^9}, {3.4782613798160887`*^9, 3.4782613822945642`*^9}, 
   3.4782614250097437`*^9, {3.478261464569503*^9, 3.4782614726009007`*^9}, 
   3.478261601032651*^9, 3.478268541226244*^9, {3.478268575391096*^9, 
   3.478268634969298*^9}, {3.478268735805653*^9, 3.478268780565995*^9}, {
   3.4782688200548277`*^9, 3.4782688232218523`*^9}, {3.478268976324139*^9, 
   3.478269000331582*^9}, {3.478269094940357*^9, 3.478269103734393*^9}, {
   3.478269138236505*^9, 3.4782692170460033`*^9}, {3.4782695432965927`*^9, 
   3.4782695436141777`*^9}, {3.4782696251396847`*^9, 3.478269631723925*^9}, {
   3.478270431191533*^9, 3.4782704555074472`*^9}, {3.478270731761209*^9, 
   3.478270735056882*^9}, {3.4782710527820663`*^9, 3.478271054212118*^9}, {
   3.4782710900613823`*^9, 3.478271105021641*^9}, {3.478271315982329*^9, 
   3.4782713501071863`*^9}, {3.478272554695908*^9, 3.478272556815922*^9}, {
   3.4782731617206087`*^9, 3.478273225614039*^9}, {3.478273298602879*^9, 
   3.478273323649921*^9}, 3.478273399949394*^9, {3.478273458067021*^9, 
   3.4782734603657913`*^9}, {3.4782735173396397`*^9, 3.4782735225539093`*^9}, 
   3.478273559785095*^9, 3.4783434340774183`*^9, {3.4783436950522223`*^9, 
   3.478343725646432*^9}, {3.478343786010791*^9, 3.47834405930056*^9}, {
   3.47834409274767*^9, 3.478344097219048*^9}, {3.478344274445964*^9, 
   3.478344292041132*^9}, {3.4783443388650637`*^9, 3.478344344592434*^9}, {
   3.478344464509012*^9, 3.478344480193715*^9}, {3.478348393444722*^9, 
   3.478348396323081*^9}, {3.4911974120274153`*^9, 3.4911974126508923`*^9}, {
   3.4970836577409573`*^9, 3.4970836581780233`*^9}, 3.497083704784813*^9, 
   3.497609006131056*^9, 3.4976092618908243`*^9, 3.4976093041873007`*^9, 
   3.497985270719062*^9, 3.4979863664072104`*^9, {3.49812328559988*^9, 
   3.498123286115807*^9}, {3.4981242965453033`*^9, 3.498124372064768*^9}, {
   3.4981262186181383`*^9, 3.498126235754595*^9}, {3.4981297988902283`*^9, 
   3.498129820974997*^9}, 3.4981378657491207`*^9, 3.4988960907174377`*^9, {
   3.5000097234012737`*^9, 3.5000097314788*^9}, {3.50021756048985*^9, 
   3.500217583064967*^9}, {3.504852140937113*^9, 3.504852142732789*^9}, {
   3.504852182150372*^9, 3.5048522229939327`*^9}, {3.5067718876924*^9, 
   3.506771887756486*^9}, {3.5068392495339937`*^9, 3.5068393973728857`*^9}, {
   3.508828107956986*^9, 3.5088281086763144`*^9}, {3.511081421674203*^9, 
   3.51108145654018*^9}, {3.5110814927217703`*^9, 3.5110815069174643`*^9}, {
   3.511083169799562*^9, 3.5110832527377996`*^9}, {3.5110832873954277`*^9, 
   3.51108355131828*^9}, {3.511083918559664*^9, 3.511083996086219*^9}, 
   3.511084102990651*^9, {3.511084178876913*^9, 3.511084179477242*^9}, {
   3.511084733870345*^9, 3.5110847796393633`*^9}, {3.51108520195334*^9, 
   3.511085213001623*^9}, {3.511085335240026*^9, 3.511085481971526*^9}, {
   3.5110859679036207`*^9, 3.511085979324946*^9}, {3.5110860350550947`*^9, 
   3.5110861040616817`*^9}, {3.51108614370877*^9, 3.5110861989473352`*^9}, {
   3.511086243102111*^9, 3.511086243182921*^9}, 3.51108627930967*^9, {
   3.5110863473938417`*^9, 3.511086354382628*^9}, 3.511086481657173*^9, {
   3.511086558422806*^9, 3.511086573919664*^9}, {3.511086713318865*^9, 
   3.511086713972447*^9}, {3.511086764863461*^9, 3.511086785281536*^9}, {
   3.511087162636683*^9, 3.511087163197419*^9}, {3.511087313440868*^9, 
   3.5110873428039*^9}, {3.511087379731193*^9, 3.511087574899609*^9}, {
   3.511087609160935*^9, 3.5110877727708387`*^9}, {3.511087922165127*^9, 
   3.5110879272267036`*^9}, {3.511088009543991*^9, 3.511088058579088*^9}, {
   3.511088117500565*^9, 3.511088129555978*^9}, {3.511088171056267*^9, 
   3.51108817757952*^9}, {3.511088224873226*^9, 3.511088227159239*^9}, {
   3.511088276142309*^9, 3.511088334901957*^9}, {3.511089028484161*^9, 
   3.5110890389531307`*^9}, {3.511091270462471*^9, 3.511091270565332*^9}, {
   3.5110913742559443`*^9, 3.511091374375416*^9}, {3.512896560752192*^9, 
   3.512896600593773*^9}, {3.512896659784368*^9, 3.51289668991255*^9}, {
   3.5128968363627977`*^9, 3.512896843423903*^9}, {3.512973570952599*^9, 
   3.512973574479372*^9}, {3.512977787380423*^9, 3.512977789017846*^9}, {
   3.514888933901311*^9, 3.5148890070141582`*^9}, {3.514889711422627*^9, 
   3.51488984939465*^9}, {3.514889899452092*^9, 3.51488992094508*^9}, {
   3.5148905207224493`*^9, 3.5148905914832363`*^9}, {3.5151728024099693`*^9, 
   3.5151728036479273`*^9}, 3.524297772763373*^9, {3.525523372593402*^9, 
   3.525523373555211*^9}, {3.525523406285582*^9, 3.525523407319633*^9}, {
   3.525523493874199*^9, 3.5255234949858303`*^9}, 3.525523546415794*^9, {
   3.525523603006619*^9, 3.525523623633065*^9}, {3.5255238412342176`*^9, 
   3.5255239329592648`*^9}, {3.525524197893301*^9, 3.525524229116867*^9}, {
   3.5256826194539843`*^9, 3.525682678214758*^9}, {3.5256828196265163`*^9, 
   3.5256828770458527`*^9}, {3.52568296517708*^9, 3.525682977331929*^9}, {
   3.525683011987233*^9, 3.525683027042158*^9}, {3.525683073100819*^9, 
   3.5256831512199507`*^9}, {3.525688991201181*^9, 3.525689019941607*^9}, 
   3.525691463594429*^9, {3.525691497565576*^9, 3.525691517082183*^9}, {
   3.5256928992373123`*^9, 3.525692903600862*^9}, {3.525696149605194*^9, 
   3.525696155834998*^9}, {3.525696200974188*^9, 3.525696204321774*^9}, {
   3.525696265953463*^9, 3.525696266030921*^9}, {3.525696318413308*^9, 
   3.525696322122346*^9}, {3.5256963842569637`*^9, 3.52569639990007*^9}, {
   3.5256965173023787`*^9, 3.525696528135931*^9}, {3.5256967271951733`*^9, 
   3.5256967274177713`*^9}, {3.525697318447958*^9, 3.5256973199556093`*^9}, {
   3.525697670189641*^9, 3.5256976703222723`*^9}, {3.525697928651021*^9, 
   3.525697966814355*^9}, {3.526201532088867*^9, 3.526201532324985*^9}, {
   3.5274191088392*^9, 3.527419110625495*^9}, {3.52759708182603*^9, 
   3.527597082133048*^9}, 3.52759726961434*^9, {3.527597435066*^9, 
   3.527597435151902*^9}, 3.527598691998662*^9, 3.532671588404984*^9, {
   3.532671628441197*^9, 3.532671645451033*^9}, 3.532695665750154*^9, 
   3.532695758024498*^9, 3.5327534919897013`*^9, 3.532753870933198*^9, 
   3.532754509418215*^9, 3.5327550376552753`*^9, 3.532955010492591*^9, {
   3.543724987670038*^9, 3.543725030470932*^9}, {3.543725089946938*^9, 
   3.543725093165457*^9}, {3.550413887827711*^9, 3.550413900046921*^9}, 
   3.550413956284883*^9, {3.550551974054201*^9, 3.550551984012463*^9}, {
   3.568619920597055*^9, 3.568619923481352*^9}, {3.5686199611210546`*^9, 
   3.568619961213807*^9}, 3.56862003643552*^9, {3.568620109665121*^9, 
   3.5686201914243*^9}, {3.56862022269565*^9, 3.568620277179731*^9}, {
   3.568620312831983*^9, 3.568620431930695*^9}, 3.5686205238321943`*^9, {
   3.570278924189578*^9, 3.570278936015264*^9}, {3.573039415486265*^9, 
   3.573039610447041*^9}, {3.573039675701536*^9, 3.573039691044097*^9}, {
   3.576492222060705*^9, 3.576492242197032*^9}, {3.576492488694278*^9, 
   3.57649251377693*^9}, {3.576492671531117*^9, 3.576492755410049*^9}, {
   3.576492792552587*^9, 3.576492929786715*^9}, {3.576492970625949*^9, 
   3.576493061743024*^9}, {3.576493110544861*^9, 3.576493150524105*^9}, {
   3.576493278779117*^9, 3.576493332696772*^9}, {3.576493500737692*^9, 
   3.5764935192571793`*^9}, {3.576494345739523*^9, 3.5764943555477552`*^9}, {
   3.5764943902567663`*^9, 3.576494439566839*^9}, {3.5764945179362392`*^9, 
   3.5764946110109653`*^9}, {3.576494661066237*^9, 3.576494689134316*^9}, {
   3.576494832163554*^9, 3.576494860282158*^9}, {3.57649492737416*^9, 
   3.5764949307314777`*^9}, {3.576495438333568*^9, 3.5764954669092007`*^9}, {
   3.576495529062014*^9, 3.576495541006729*^9}, {3.576495573002437*^9, 
   3.576495590941259*^9}, {3.576495646811511*^9, 3.576495646939336*^9}, {
   3.5764957067162123`*^9, 3.576495722160061*^9}, {3.5764964134186563`*^9, 
   3.576496436218257*^9}, {3.5764965294327583`*^9, 3.5764965516518393`*^9}, {
   3.576496714906144*^9, 3.576496715108631*^9}, {3.576593283662119*^9, 
   3.5765932864740267`*^9}, {3.576593344638075*^9, 3.576593407144224*^9}, 
   3.576593513255436*^9, {3.5765935549357567`*^9, 3.576593579222559*^9}, {
   3.576593949994931*^9, 3.576594032893656*^9}, {3.57665217341442*^9, 
   3.576652185010734*^9}, 3.576652266444377*^9, {3.576652380052432*^9, 
   3.576652402947567*^9}, {3.576652445053073*^9, 3.576652449082213*^9}, 
   3.5766525394556913`*^9, 3.576652586715734*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["generate single time trace", "Section",
 CellChangeTimes->{{3.498895939675844*^9, 3.498895941764246*^9}, {
  3.573039804237383*^9, 3.573039808172245*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "basedir", " ", "=", " ", 
   "\"\<~/Desktop/Doktorarbeit/Simulationen/NEST/multi-topologies/Middle/\
LambdasAdaptive\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "@", "basedir"}], ";"}]}], "Input",
 CellChangeTimes->{{3.475672097392085*^9, 3.475672103957631*^9}, {
   3.476016493244141*^9, 3.476016521607841*^9}, {3.476082626590372*^9, 
   3.476082631627201*^9}, {3.4773206844245777`*^9, 3.477320702964617*^9}, {
   3.491197341320594*^9, 3.491197348357463*^9}, {3.49119856826263*^9, 
   3.491198568905814*^9}, {3.4964809460859823`*^9, 3.496480947100027*^9}, {
   3.496504679698099*^9, 3.496504680335734*^9}, {3.4968442065624332`*^9, 
   3.4968442075859737`*^9}, {3.496844573964121*^9, 3.496844574633359*^9}, {
   3.4970836327683487`*^9, 3.497083635430181*^9}, {3.4976098229837933`*^9, 
   3.4976098236294117`*^9}, {3.497610154097993*^9, 3.49761015496113*^9}, {
   3.498131703444675*^9, 3.49813170484267*^9}, {3.498137729668604*^9, 
   3.4981377306494904`*^9}, {3.4989018772967157`*^9, 3.498901877922434*^9}, {
   3.499679102572515*^9, 3.4996791037767773`*^9}, {3.49968657115104*^9, 
   3.4996865718175592`*^9}, {3.500009704167893*^9, 3.500009705403448*^9}, {
   3.500013059866373*^9, 3.500013060511355*^9}, {3.500216772499247*^9, 
   3.500216774600235*^9}, {3.504852118872987*^9, 3.504852119493556*^9}, {
   3.506771869514141*^9, 3.506771871246632*^9}, {3.512896108442882*^9, 
   3.512896141761351*^9}, {3.512898521550989*^9, 3.5128985221726847`*^9}, {
   3.512973497016601*^9, 3.512973498024246*^9}, {3.512978605392911*^9, 
   3.512978606030052*^9}, {3.512978781236549*^9, 3.5129787820267*^9}, {
   3.514282059098795*^9, 3.514282061387546*^9}, {3.51532355856011*^9, 
   3.515323560869093*^9}, {3.515931645759591*^9, 3.515931647656096*^9}, 
   3.525523536650144*^9, {3.525672275889689*^9, 3.5256722761847677`*^9}, {
   3.527590430895941*^9, 3.527590432295566*^9}, 3.527849955861045*^9, {
   3.5279280608122387`*^9, 3.527928062297367*^9}, {3.531058908561016*^9, 
   3.5310589222689457`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "@", "size"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"adjA", ",", "pos", ",", "pars"}], "}"}], "=", 
   RowBox[{
   "ImportNetworkFromYAML", "[", 
    "\"\<../Lambdas/adjA_Middle1-Lambda0025.yaml\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "pars", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.500287301878975*^9, 3.500287302082986*^9}, {
   3.504852125822468*^9, 3.504852126430822*^9}, {3.506771879041363*^9, 
   3.506771880845846*^9}, {3.512973794870282*^9, 3.5129738035627527`*^9}, {
   3.512978088445311*^9, 3.512978089708085*^9}, {3.514010300494207*^9, 
   3.514010301339159*^9}, 3.5140103603568783`*^9, {3.5310589734346933`*^9, 
   3.531058976882615*^9}, {3.5310590105279617`*^9, 3.531059017183997*^9}, {
   3.5311133912623777`*^9, 3.531113391548325*^9}, {3.531113459144137*^9, 
   3.531113459232057*^9}, {3.5311228297697887`*^9, 3.5311228304393463`*^9}, {
   3.5311324248804083`*^9, 3.531132424966391*^9}, {3.531217251952612*^9, 
   3.531217253431246*^9}, 3.531553140560711*^9, 3.531553207273576*^9, {
   3.531553350960822*^9, 3.531553351696371*^9}, 3.531553504758732*^9, 
   3.531571327252343*^9, 3.53157142156498*^9, {3.544346092245636*^9, 
   3.544346093137823*^9}, {3.549872250161255*^9, 3.549872267083995*^9}, {
   3.549872302694229*^9, 3.549872308119317*^9}, {3.5504139132677507`*^9, 
   3.550413915056617*^9}, {3.5652556932655163`*^9, 3.56525569337466*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"cons", "\[Rule]", "1209"}], ",", 
   RowBox[{"createdAt", "\[Rule]", "\<\"Sun 29 May 2011 20:59:29\"\>"}], ",", 
   
   RowBox[{"minDist", "\[Rule]", "0.01`"}], ",", 
   RowBox[{
   "notes", "\[Rule]", "\<\"topology for averaging (type: clustered graph \
with lambda=0.25, iteration #1)\"\>"}], ",", 
   RowBox[{"size", "\[Rule]", "100"}]}], "}"}]], "Print",
 CellChangeTimes->{{3.531059014242917*^9, 3.531059017678555*^9}, 
   3.53111196158032*^9, 3.531113392018693*^9, 3.531113459796146*^9, 
   3.531122831124955*^9, 3.531132425430745*^9, 3.531217060726019*^9, 
   3.5312172539799557`*^9, 3.531217504882197*^9, 3.5312180508160954`*^9, 
   3.531553052695222*^9, 3.531553141637941*^9, 3.531553207879868*^9, 
   3.53155335262535*^9, 3.531553506468128*^9, 3.531556860149598*^9, 
   3.5315582083752737`*^9, 3.531570486435721*^9, 3.531571180667807*^9, 
   3.531571327815679*^9, 3.53157142230267*^9, 3.5315716381072683`*^9, 
   3.5315720963233557`*^9, 3.531572394524685*^9, 3.531574562652472*^9, 
   3.531736538940772*^9, 3.53173668287846*^9, 3.5317470398825483`*^9, 
   3.531811492768474*^9, 3.532182356961485*^9, 3.532671340268894*^9, 
   3.5327535202221327`*^9, 3.5329549994878597`*^9, {3.532955761415613*^9, 
   3.532955763820175*^9}, 3.5330210821310053`*^9, 3.53320844762214*^9, 
   3.539596180536046*^9, 3.539683286200615*^9, 3.539774558252301*^9, 
   3.540368736258568*^9, 3.540630125225379*^9, 3.540967174557233*^9, 
   3.542347781440239*^9, 3.54372400553091*^9, 3.543729529602523*^9, 
   3.5443416566717176`*^9, {3.544346070679617*^9, 3.544346084708827*^9}, 
   3.544347535070936*^9, {3.549872252781741*^9, 3.549872267486885*^9}, {
   3.5498723034429607`*^9, 3.549872309661628*^9}, 3.550413915980476*^9, 
   3.55055300101471*^9, 3.550554010665362*^9, 3.550923767481032*^9, 
   3.55282303057681*^9, 3.556615229874072*^9, 3.556616229233921*^9, 
   3.55661779528395*^9, 3.56525569420367*^9, 3.571570426691021*^9, 
   3.571570613589058*^9, 3.571742571359762*^9, 3.571822242097609*^9, 
   3.573039645814749*^9, 3.576493163114142*^9, 3.576593419289935*^9, 
   3.576652207702149*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"seriesindex", "=", "\"\<net1_cc0_p0_w0\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xindex", "=", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{"\"\<s_index_\>\"", "<>", 
         RowBox[{"ToString", "@", "seriesindex"}], "<>", "\"\<.dat\>\""}], 
        ",", "\"\<Table\>\""}], "]"}], "]"}], "+", "1"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"ugly", " ", "hack", " ", "because", " ", "of", " ", 
    RowBox[{"NEST", "'"}], "s", " ", "way", " ", "of", " ", "indexing", " ", 
    "nodes"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"xindex", "-=", 
     RowBox[{
      RowBox[{"Min", "@", "xindex"}], "-", "1"}]}], ";"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Cell indices ranging from \>\"", "<>", 
     RowBox[{"ToString", "@", 
      RowBox[{"Min", "@", "xindex"}]}], "<>", "\"\< to \>\"", "<>", 
     RowBox[{"ToString", "@", 
      RowBox[{"Max", "@", "xindex"}]}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xtimes", "=", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"\"\<s_times_\>\"", "<>", 
        RowBox[{"ToString", "@", "seriesindex"}], "<>", "\"\<.dat\>\""}], 
       ",", "\"\<Table\>\""}], "]"}], "]"}], "/", "1000"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "@", "xindex"}], "\[NotEqual]", 
     RowBox[{"Length", "@", "xtimes"}]}], ",", 
    RowBox[{"Abort", "[", "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Spike times (in seconds) ranging from \>\"", "<>", 
     RowBox[{"ToString", "@", 
      RowBox[{"Min", "@", "xtimes"}]}], "<>", "\"\< to \>\"", "<>", 
     RowBox[{"ToString", "@", 
      RowBox[{"Max", "@", "xtimes"}]}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
    RowBox[{"ToString", "@", 
     RowBox[{"Length", "@", "xindex"}]}], "<>", "\"\< spikes with \>\"", "<>", 
    RowBox[{"ToString", "@", 
     RowBox[{"Length", "@", "xtimes"}]}], "<>", 
    "\"\< time signatures loaded.\>\""}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.454944021254458*^9, 3.4549441018408318`*^9}, {
   3.454944553198271*^9, 3.454944589514287*^9}, {3.4549458249576483`*^9, 
   3.4549458829153976`*^9}, {3.4549459857325478`*^9, 3.454945987027132*^9}, {
   3.454985695611163*^9, 3.454985738110688*^9}, {3.455003429433923*^9, 
   3.455003430839737*^9}, {3.460285207758267*^9, 3.4602852345967283`*^9}, {
   3.4602854441281424`*^9, 3.4602855634165287`*^9}, {3.46028561524104*^9, 
   3.4602856386495237`*^9}, {3.460285695490296*^9, 3.46028580028491*^9}, {
   3.460440056919799*^9, 3.460440059157693*^9}, {3.476016530693009*^9, 
   3.47601654906739*^9}, {3.48999671504733*^9, 3.4899967536009197`*^9}, {
   3.512896224440181*^9, 3.512896257732731*^9}, {3.5128968914699583`*^9, 
   3.512896891875242*^9}, {3.512898525701339*^9, 3.51289852577083*^9}, {
   3.512978327275341*^9, 3.5129783273431053`*^9}, {3.512978586178068*^9, 
   3.512978626115305*^9}, {3.512978785379534*^9, 3.5129788085673656`*^9}, {
   3.5130592163028297`*^9, 3.513059216389372*^9}, {3.514889179721657*^9, 
   3.514889183149123*^9}, {3.515145938622096*^9, 3.5151459413005333`*^9}, {
   3.51532356330064*^9, 3.515323564371257*^9}, 3.5153479172197857`*^9, {
   3.515931652600555*^9, 3.515931656656698*^9}, {3.51593172429486*^9, 
   3.515931739962735*^9}, {3.515943942620368*^9, 3.5159439906402197`*^9}, {
   3.515945832465871*^9, 3.515945832721566*^9}, 3.525523095829687*^9, {
   3.525672281312931*^9, 3.525672300271976*^9}, {3.525676914733757*^9, 
   3.5256769153973827`*^9}, {3.5256770162079144`*^9, 3.525677016293858*^9}, {
   3.525677076867784*^9, 3.525677076977509*^9}, {3.525677597531398*^9, 
   3.5256775976252537`*^9}, {3.52567769269952*^9, 3.5256776927564297`*^9}, {
   3.5256777306087914`*^9, 3.525677730695838*^9}, {3.525680722957177*^9, 
   3.525680723205473*^9}, {3.525680763482522*^9, 3.525680763602359*^9}, {
   3.525680803392015*^9, 3.525680803471521*^9}, {3.525680900177617*^9, 
   3.525680900417193*^9}, {3.525680940095099*^9, 3.525680940150632*^9}, {
   3.5256809742448893`*^9, 3.5256809743486137`*^9}, {3.5256827737759943`*^9, 
   3.525682775311058*^9}, 3.5274182020042048`*^9, 3.527420675375259*^9, {
   3.527420757373179*^9, 3.5274207574322863`*^9}, 3.527420803374366*^9, 
   3.5274208781494493`*^9, 3.527422037657555*^9, 3.5274220836957827`*^9, {
   3.527928072605802*^9, 3.527928072703668*^9}, {3.528022006038714*^9, 
   3.5280220061084223`*^9}, {3.528022040084364*^9, 3.528022040330765*^9}, {
   3.528203183896245*^9, 3.528203270546176*^9}, {3.5315705790738363`*^9, 
   3.5315705822710238`*^9}, 3.5315745576284857`*^9, {3.540969226316094*^9, 
   3.540969226409445*^9}, {3.540969618148946*^9, 3.540969618410421*^9}, {
   3.5652557042214518`*^9, 3.56525570445959*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Cell indices ranging from 1 to 100\"\>"], "Print",
 CellChangeTimes->{3.5730396506930313`*^9, 3.5764931676022997`*^9, 
  3.576593423512198*^9, 3.5766522117781343`*^9}],

Cell[BoxData["\<\"Spike times (in seconds) ranging from 0.0196 to \
3599.99\"\>"], "Print",
 CellChangeTimes->{3.5730396506930313`*^9, 3.5764931676022997`*^9, 
  3.576593423512198*^9, 3.5766522148792067`*^9}],

Cell[BoxData["\<\"223339 spikes with 223339 time signatures loaded.\"\>"], \
"Print",
 CellChangeTimes->{3.5730396506930313`*^9, 3.5764931676022997`*^9, 
  3.576593423512198*^9, 3.576652214882183*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"xtest", "=", 
   RowBox[{"GenerateSignalCHA", "[", 
    RowBox[{
    "20", ",", "100", ",", "xindex", ",", "xtimes", ",", "pos", ",", "100"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.573039655222952*^9, 3.5730397170324183`*^9}, 
   3.57649317598463*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"xtest", "\[LeftDoubleBracket]", 
    RowBox[{
     RowBox[{"1", ";;", "3"}], ",", 
     RowBox[{"1", ";;", "1000"}]}], "\[RightDoubleBracket]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<sample\>\"", ",", "\"\<fluorescence (a.u.)\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.573039736420075*^9, 3.573039792327456*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GenerateSignalCHAStreamToFile", "[", 
   RowBox[{
   "20", ",", "30", ",", "xindex", ",", "xtimes", ",", "pos", ",", "100", 
    ",", "\"\<~/Desktop/test1.mx\>\""}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.576493196819098*^9, 3.5764932211417017`*^9}, 
   3.576493537082782*^9, {3.576494447364558*^9, 3.576494476066949*^9}, 
   3.5764957491188707`*^9, 3.576593429989485*^9, 3.576652214438055*^9, 
   3.576652284424155*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "1"}], "}"}]}], "}"}]}], ";", 
  RowBox[{"v", "=", 
   RowBox[{"{", 
    RowBox[{"0.1", ",", "0.2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"A", ".", "v"}]}], "Input",
 CellChangeTimes->{{3.576495652689763*^9, 3.576495678621827*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.1`", ",", "0.25`"}], "}"}]], "Output",
 CellChangeTimes->{3.576495679372744*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"xtest", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<~/Desktop/test1.mx\>\"", ",", "\"\<CSV\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.5764957551717176`*^9, 3.57649577359573*^9}, {
  3.5764958206838617`*^9, 3.57649582260312*^9}, {3.576593697031542*^9, 
  3.576593698084249*^9}, {3.5765937310932302`*^9, 3.5765937313157997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "@", "xtest"}]], "Input",
 CellChangeTimes->{{3.57649580080093*^9, 3.5764958091476917`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1501", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{{3.5764958066638203`*^9, 3.576495825407115*^9}, 
   3.576496591862153*^9, 3.576593451362836*^9, 3.576593523767466*^9, 
   3.576593590722995*^9, {3.576593699382044*^9, 3.576593732809309*^9}, 
   3.576652291973776*^9, 3.576652418971616*^9, 3.576652459992584*^9, 
   3.5766525498690863`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Length", "/@", "xtest"}], "\[IndentingNewLine]", 
 RowBox[{"Min", "@", 
  RowBox[{"Flatten", "@", "xtest"}]}], "\[IndentingNewLine]", 
 RowBox[{"Max", "@", 
  RowBox[{"Flatten", "@", "xtest"}]}]}], "Input",
 CellChangeTimes->{{3.576495896740612*^9, 3.576495899775629*^9}, {
  3.5765934617942963`*^9, 3.576593478862432*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.115753`"}]], "Output",
 CellChangeTimes->{
  3.576496513555204*^9, 3.576496593661216*^9, {3.576593453490006*^9, 
   3.5765934794182043`*^9}, 3.576593525841161*^9, 3.576593609096737*^9, {
   3.5765937030906277`*^9, 3.576593733720416*^9}, 3.5766522950398397`*^9, 
   3.5766524225414743`*^9, 3.5766524625949383`*^9, 3.576652554938897*^9}],

Cell[BoxData["1.41319`"], "Output",
 CellChangeTimes->{
  3.576496513555204*^9, 3.576496593661216*^9, {3.576593453490006*^9, 
   3.5765934794182043`*^9}, 3.576593525841161*^9, 3.576593609096737*^9, {
   3.5765937030906277`*^9, 3.576593733720416*^9}, 3.5766522950398397`*^9, 
   3.5766524225414743`*^9, 3.5766524625949383`*^9, 3.576652554940366*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["generate multiple time traces", "Section",
 CellChangeTimes->{{3.498895939675844*^9, 3.498895941764246*^9}, {
  3.573039804237383*^9, 3.573039817476596*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", "\"\<~/Desktop/Doktorarbeit/Causality/challenge\>\"", 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"networkSizes", "=", 
   RowBox[{"{", 
    RowBox[{"50", ",", "100", ",", "500"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"topoIndices", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.1", ",", "0.2", ",", "0.3", ",", "0.4", ",", "0.5", ",", "0.6"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"simTime", "=", "3600"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"in", " ", "s"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<--- Starting simulation for N = \>\"", ",", "nn", ",", 
       "\"\< and CC = \>\"", ",", "tt", ",", "\"\< ---\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"topoString", "=", 
      RowBox[{"\"\<0\>\"", "<>", 
       RowBox[{"ToString", "@", 
        RowBox[{"Round", "[", 
         RowBox[{"tt", "*", "10"}], "]"}]}]}]}], ";", " ", 
     RowBox[{"(*", " ", "hack", " ", "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "load", " ", "network", " ", "topology", " ", "and", " ", "cell", " ", 
       "positions"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"filename", "=", 
      RowBox[{"\"\<topology_iNet1_Size\>\"", "<>", 
       RowBox[{"ToString", "[", "nn", "]"}], "<>", "\"\<_CC\>\"", "<>", 
       "topoString", "<>", "\"\<.yaml\>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"adjA", ",", "pos", ",", "pars"}], "}"}], "=", 
      RowBox[{"ImportNetworkFromYAML", "[", 
       RowBox[{"\"\<topologies/\>\"", "<>", "filename"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "pos"}], "\[NotEqual]", "nn"}], ",", 
       RowBox[{"Abort", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"load", " ", "spike", " ", "data"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"filename", "=", 
      RowBox[{"\"\<indices_iNet1_Size\>\"", "<>", 
       RowBox[{"ToString", "[", "nn", "]"}], "<>", "\"\<_CC\>\"", "<>", 
       "topoString", "<>", "\"\<.dat\>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xindex", "=", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Import", "[", 
         RowBox[{
          RowBox[{"\"\<spikes/\>\"", "<>", "filename"}], ",", 
          "\"\<Table\>\""}], "]"}], "]"}], "+", "1"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"filename", "=", 
      RowBox[{"\"\<times_iNet1_Size\>\"", "<>", 
       RowBox[{"ToString", "[", "nn", "]"}], "<>", "\"\<_CC\>\"", "<>", 
       "topoString", "<>", "\"\<.dat\>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xtimes", "=", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Import", "[", 
         RowBox[{
          RowBox[{"\"\<spikes/\>\"", "<>", "filename"}], ",", 
          "\"\<Table\>\""}], "]"}], "]"}], "/", "1000.0"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "xindex"}], "\[NotEqual]", 
        RowBox[{"Length", "@", "xtimes"}]}], ",", 
       RowBox[{"Abort", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "generate", " ", "fluorescence", " ", "and", " ", "save", " ", "to", 
       " ", "disk"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"filename", "=", 
      RowBox[{"\"\<fluorescence_iNet1_Size\>\"", "<>", 
       RowBox[{"ToString", "[", "nn", "]"}], "<>", "\"\<_CC\>\"", "<>", 
       "topoString", "<>", "\"\<.txt\>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"GenerateSignalCHAStreamToFile", "[", 
      RowBox[{"20", ",", 
       RowBox[{"100", "+", 
        RowBox[{"0", "*", "simTime"}]}], ",", "xindex", ",", "xtimes", ",", 
       "pos", ",", "nn", ",", "filename"}], "]"}], ";"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"nn", ",", "networkSizes"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"tt", ",", "topoIndices"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"topoString", ",", "filename"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.573039853436088*^9, 3.573039877677459*^9}, {
  3.573039907683434*^9, 3.573039948778829*^9}, {3.573040303036084*^9, 
  3.573040957108633*^9}, {3.573041009381049*^9, 3.5730411493055353`*^9}, {
  3.5730412344332333`*^9, 3.5730412368074713`*^9}, {3.5730432783906918`*^9, 
  3.5730432788453903`*^9}, {3.573043412839367*^9, 3.573043447831182*^9}, {
  3.5730434906487093`*^9, 3.573043568468059*^9}, {3.573043711138542*^9, 
  3.5730437185700912`*^9}, {3.573043782294491*^9, 3.573043817320155*^9}, {
  3.5730438556458483`*^9, 3.573043878765593*^9}, {3.573043914192648*^9, 
  3.573043950236298*^9}, {3.5730440382889643`*^9, 3.573044069684107*^9}, {
  3.573044142472241*^9, 3.573044159452921*^9}, {3.573044308256235*^9, 
  3.573044311258423*^9}, {3.5766573557000933`*^9, 3.576657407049571*^9}}]
}, Open  ]]
},
WindowSize->{910, 727},
WindowMargins->{{29, Automatic}, {Automatic, 0}},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (February 23, \
2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 116, 2, 67, "Section",
 InitializationCell->True],
Cell[698, 26, 34184, 631, 1693, "Input",
 InitializationCell->True],
Cell[34885, 659, 35766, 640, 1746, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[70688, 1304, 160, 2, 37, "Section"],
Cell[70851, 1308, 2059, 32, 43, "Input"],
Cell[CellGroupData[{
Cell[72935, 1344, 1498, 27, 58, "Input"],
Cell[74436, 1373, 2132, 35, 36, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76605, 1413, 5150, 104, 178, "Input"],
Cell[CellGroupData[{
Cell[81780, 1521, 185, 2, 20, "Print"],
Cell[81968, 1525, 208, 3, 20, "Print"],
Cell[82179, 1530, 200, 3, 20, "Print"]
}, Open  ]]
}, Open  ]],
Cell[82406, 1537, 301, 8, 27, "Input"],
Cell[82710, 1547, 535, 13, 43, "Input"],
Cell[83248, 1562, 462, 9, 27, "Input"],
Cell[CellGroupData[{
Cell[83735, 1575, 428, 13, 43, "Input"],
Cell[84166, 1590, 122, 3, 27, "Output"]
}, Open  ]],
Cell[84303, 1596, 384, 8, 27, "Input"],
Cell[CellGroupData[{
Cell[84712, 1608, 129, 2, 27, "Input"],
Cell[84844, 1612, 386, 7, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85267, 1624, 348, 7, 58, "Input"],
Cell[85618, 1633, 366, 6, 27, "Output"],
Cell[85987, 1641, 348, 5, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[86384, 1652, 163, 2, 67, "Section"],
Cell[86550, 1656, 5358, 124, 418, "Input"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
